extern class System.Double extends System.ValueType implements System.IComparable implements System.IConvertible implements System.IFormattable implements System.IComparable`1<Float> implements System.IEquatable`1<Float>{
	public CompareTo(method) : value : Dynamic -> Int

	public CompareTo(method) : value : Float -> Int

	public ToString(method) : Void -> String

	public ToString(method) : format : String -> provider : System.IFormatProvider -> String

	public ToString(method) : format : String -> String

	public ToString(method) : provider : System.IFormatProvider -> String

	public GetTypeCode(method) : Void -> System.TypeCode

	static public PositiveInfinity((default,never)) : Float

	static public NegativeInfinity((default,never)) : Float

	static public NaN((default,never)) : Float

	static public MinValue((default,never)) : Float

	static public MaxValue((default,never)) : Float

	static public Epsilon((default,never)) : Float

	static public IsInfinity(method) : d : Float -> Bool

	static public IsNaN(method) : d : Float -> Bool

	static public IsNegativeInfinity(method) : d : Float -> Bool

	static public IsPositiveInfinity(method) : d : Float -> Bool

	static public Parse(method) : s : String -> Float

	static public Parse(method) : s : String -> style : System.Globalization.NumberStyles -> provider : System.IFormatProvider -> Float

	static public Parse(method) : s : String -> style : System.Globalization.NumberStyles -> Float

	static public Parse(method) : s : String -> provider : System.IFormatProvider -> Float

	static public TryParse(method) : s : String -> style : System.Globalization.NumberStyles -> provider : System.IFormatProvider -> result : cs.Out<Float> -> Bool

	static public TryParse(method) : s : String -> result : cs.Out<Float> -> Bool

	static public op_Equality(method) : left : Float -> right : Float -> Bool

	static public op_Inequality(method) : left : Float -> right : Float -> Bool

	static public op_GreaterThan(method) : left : Float -> right : Float -> Bool

	static public op_GreaterThanOrEqual(method) : left : Float -> right : Float -> Bool

	static public op_LessThan(method) : left : Float -> right : Float -> Bool

	static public op_LessThanOrEqual(method) : left : Float -> right : Float -> Bool

}