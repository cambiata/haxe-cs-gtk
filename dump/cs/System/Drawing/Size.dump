extern class System.Drawing.Size extends System.ValueType{
	public new(method) : pt : System.Drawing.Point -> Void

	public new(method) : width : Int -> height : Int -> Void

	public Height((get,set)) : Int

	public Width((get,set)) : Int

	public IsEmpty((get,never)) : Bool

	get_IsEmpty(method) : Void -> Bool

	get_Width(method) : Void -> Int

	set_Width(method) : value : Int -> Int

	get_Height(method) : Void -> Int

	set_Height(method) : value : Int -> Int

	public ToString(method) : Void -> String

	static public Empty((default,never)) : System.Drawing.Size

	static public op_Implicit(method) : p : System.Drawing.Size -> System.Drawing.SizeF

	static public op_Addition(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> System.Drawing.Size

	static public op_Subtraction(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> System.Drawing.Size

	static public op_Equality(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> Bool

	static public op_Inequality(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> Bool

	static public op_Explicit(method) : size : System.Drawing.Size -> System.Drawing.Point

	static public Add(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> System.Drawing.Size

	static public Ceiling(method) : value : System.Drawing.SizeF -> System.Drawing.Size

	static public Subtract(method) : sz1 : System.Drawing.Size -> sz2 : System.Drawing.Size -> System.Drawing.Size

	static public Truncate(method) : value : System.Drawing.SizeF -> System.Drawing.Size

	static public Round(method) : value : System.Drawing.SizeF -> System.Drawing.Size

}