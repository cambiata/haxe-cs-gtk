extern class System.Drawing.Drawing2D.GraphicsPath extends System.MarshalByRefObject implements System.ICloneable implements System.IDisposable{
	public new(method) : Void -> Void

	public new(method) : pts : cs.NativeArray<System.Drawing.Point> -> types : cs.NativeArray<cs.types.UInt8> -> fillMode : System.Drawing.Drawing2D.FillMode -> Void

	public new(method) : pts : cs.NativeArray<System.Drawing.Point> -> types : cs.NativeArray<cs.types.UInt8> -> Void

	public new(method) : pts : cs.NativeArray<System.Drawing.PointF> -> types : cs.NativeArray<cs.types.UInt8> -> fillMode : System.Drawing.Drawing2D.FillMode -> Void

	public new(method) : pts : cs.NativeArray<System.Drawing.PointF> -> types : cs.NativeArray<cs.types.UInt8> -> Void

	public new(method) : fillMode : System.Drawing.Drawing2D.FillMode -> Void

	public PathPoints((get,never)) : cs.NativeArray<System.Drawing.PointF>

	public PathTypes((get,never)) : cs.NativeArray<cs.types.UInt8>

	public PointCount((get,never)) : Int

	public PathData((get,never)) : System.Drawing.Drawing2D.PathData

	public FillMode((get,set)) : System.Drawing.Drawing2D.FillMode

	public Clone(method) : Void -> Dynamic

	public Dispose(method) : Void -> Void

	Finalize(method) : Void -> Void

	public Reset(method) : Void -> Void

	get_FillMode(method) : Void -> System.Drawing.Drawing2D.FillMode

	set_FillMode(method) : value : System.Drawing.Drawing2D.FillMode -> System.Drawing.Drawing2D.FillMode

	get_PathData(method) : Void -> System.Drawing.Drawing2D.PathData

	public StartFigure(method) : Void -> Void

	public CloseFigure(method) : Void -> Void

	public CloseAllFigures(method) : Void -> Void

	public SetMarkers(method) : Void -> Void

	public ClearMarkers(method) : Void -> Void

	public Reverse(method) : Void -> Void

	public GetLastPoint(method) : Void -> System.Drawing.PointF

	public IsVisible(method) : x : Single -> y : Single -> Bool

	public IsVisible(method) : pt : System.Drawing.Point -> graphics : System.Drawing.Graphics -> Bool

	public IsVisible(method) : x : Int -> y : Int -> graphics : System.Drawing.Graphics -> Bool

	public IsVisible(method) : point : System.Drawing.Point -> Bool

	public IsVisible(method) : x : Int -> y : Int -> Bool

	public IsVisible(method) : pt : System.Drawing.PointF -> graphics : System.Drawing.Graphics -> Bool

	public IsVisible(method) : x : Single -> y : Single -> graphics : System.Drawing.Graphics -> Bool

	public IsVisible(method) : point : System.Drawing.PointF -> Bool

	public IsOutlineVisible(method) : x : Single -> y : Single -> pen : System.Drawing.Pen -> Bool

	public IsOutlineVisible(method) : pt : System.Drawing.Point -> pen : System.Drawing.Pen -> graphics : System.Drawing.Graphics -> Bool

	public IsOutlineVisible(method) : x : Int -> y : Int -> pen : System.Drawing.Pen -> graphics : System.Drawing.Graphics -> Bool

	public IsOutlineVisible(method) : point : System.Drawing.Point -> pen : System.Drawing.Pen -> Bool

	public IsOutlineVisible(method) : x : Int -> y : Int -> pen : System.Drawing.Pen -> Bool

	public IsOutlineVisible(method) : pt : System.Drawing.PointF -> pen : System.Drawing.Pen -> graphics : System.Drawing.Graphics -> Bool

	public IsOutlineVisible(method) : x : Single -> y : Single -> pen : System.Drawing.Pen -> graphics : System.Drawing.Graphics -> Bool

	public IsOutlineVisible(method) : point : System.Drawing.PointF -> pen : System.Drawing.Pen -> Bool

	public AddLine(method) : pt1 : System.Drawing.PointF -> pt2 : System.Drawing.PointF -> Void

	public AddLine(method) : x1 : Int -> y1 : Int -> x2 : Int -> y2 : Int -> Void

	public AddLine(method) : pt1 : System.Drawing.Point -> pt2 : System.Drawing.Point -> Void

	public AddLine(method) : x1 : Single -> y1 : Single -> x2 : Single -> y2 : Single -> Void

	public AddLines(method) : points : cs.NativeArray<System.Drawing.PointF> -> Void

	public AddLines(method) : points : cs.NativeArray<System.Drawing.Point> -> Void

	public AddArc(method) : rect : System.Drawing.RectangleF -> startAngle : Single -> sweepAngle : Single -> Void

	public AddArc(method) : x : Int -> y : Int -> width : Int -> height : Int -> startAngle : Single -> sweepAngle : Single -> Void

	public AddArc(method) : rect : System.Drawing.Rectangle -> startAngle : Single -> sweepAngle : Single -> Void

	public AddArc(method) : x : Single -> y : Single -> width : Single -> height : Single -> startAngle : Single -> sweepAngle : Single -> Void

	public AddBezier(method) : pt1 : System.Drawing.PointF -> pt2 : System.Drawing.PointF -> pt3 : System.Drawing.PointF -> pt4 : System.Drawing.PointF -> Void

	public AddBezier(method) : x1 : Int -> y1 : Int -> x2 : Int -> y2 : Int -> x3 : Int -> y3 : Int -> x4 : Int -> y4 : Int -> Void

	public AddBezier(method) : pt1 : System.Drawing.Point -> pt2 : System.Drawing.Point -> pt3 : System.Drawing.Point -> pt4 : System.Drawing.Point -> Void

	public AddBezier(method) : x1 : Single -> y1 : Single -> x2 : Single -> y2 : Single -> x3 : Single -> y3 : Single -> x4 : Single -> y4 : Single -> Void

	public AddBeziers(method) : points : cs.NativeArray<System.Drawing.PointF> -> Void

	public AddBeziers(method) : points : cs.NativeArray<System.Drawing.Point> -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.PointF> -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.Point> -> offset : Int -> numberOfSegments : Int -> tension : Single -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.Point> -> tension : Single -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.Point> -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.PointF> -> offset : Int -> numberOfSegments : Int -> tension : Single -> Void

	public AddCurve(method) : points : cs.NativeArray<System.Drawing.PointF> -> tension : Single -> Void

	public AddClosedCurve(method) : points : cs.NativeArray<System.Drawing.PointF> -> Void

	public AddClosedCurve(method) : points : cs.NativeArray<System.Drawing.Point> -> tension : Single -> Void

	public AddClosedCurve(method) : points : cs.NativeArray<System.Drawing.Point> -> Void

	public AddClosedCurve(method) : points : cs.NativeArray<System.Drawing.PointF> -> tension : Single -> Void

	public AddRectangle(method) : rect : System.Drawing.RectangleF -> Void

	public AddRectangle(method) : rect : System.Drawing.Rectangle -> Void

	public AddRectangles(method) : rects : cs.NativeArray<System.Drawing.RectangleF> -> Void

	public AddRectangles(method) : rects : cs.NativeArray<System.Drawing.Rectangle> -> Void

	public AddEllipse(method) : rect : System.Drawing.RectangleF -> Void

	public AddEllipse(method) : x : Int -> y : Int -> width : Int -> height : Int -> Void

	public AddEllipse(method) : rect : System.Drawing.Rectangle -> Void

	public AddEllipse(method) : x : Single -> y : Single -> width : Single -> height : Single -> Void

	public AddPie(method) : rect : System.Drawing.Rectangle -> startAngle : Single -> sweepAngle : Single -> Void

	public AddPie(method) : x : Int -> y : Int -> width : Int -> height : Int -> startAngle : Single -> sweepAngle : Single -> Void

	public AddPie(method) : x : Single -> y : Single -> width : Single -> height : Single -> startAngle : Single -> sweepAngle : Single -> Void

	public AddPolygon(method) : points : cs.NativeArray<System.Drawing.PointF> -> Void

	public AddPolygon(method) : points : cs.NativeArray<System.Drawing.Point> -> Void

	public AddPath(method) : addingPath : System.Drawing.Drawing2D.GraphicsPath -> connect : Bool -> Void

	public AddString(method) : s : String -> family : System.Drawing.FontFamily -> style : Int -> emSize : Single -> origin : System.Drawing.PointF -> format : System.Drawing.StringFormat -> Void

	public AddString(method) : s : String -> family : System.Drawing.FontFamily -> style : Int -> emSize : Single -> layoutRect : System.Drawing.Rectangle -> format : System.Drawing.StringFormat -> Void

	public AddString(method) : s : String -> family : System.Drawing.FontFamily -> style : Int -> emSize : Single -> layoutRect : System.Drawing.RectangleF -> format : System.Drawing.StringFormat -> Void

	public AddString(method) : s : String -> family : System.Drawing.FontFamily -> style : Int -> emSize : Single -> origin : System.Drawing.Point -> format : System.Drawing.StringFormat -> Void

	public Transform(method) : matrix : System.Drawing.Drawing2D.Matrix -> Void

	public GetBounds(method) : Void -> System.Drawing.RectangleF

	public GetBounds(method) : matrix : System.Drawing.Drawing2D.Matrix -> pen : System.Drawing.Pen -> System.Drawing.RectangleF

	public GetBounds(method) : matrix : System.Drawing.Drawing2D.Matrix -> System.Drawing.RectangleF

	public Flatten(method) : Void -> Void

	public Flatten(method) : matrix : System.Drawing.Drawing2D.Matrix -> flatness : Single -> Void

	public Flatten(method) : matrix : System.Drawing.Drawing2D.Matrix -> Void

	public Widen(method) : pen : System.Drawing.Pen -> Void

	public Widen(method) : pen : System.Drawing.Pen -> matrix : System.Drawing.Drawing2D.Matrix -> flatness : Single -> Void

	public Widen(method) : pen : System.Drawing.Pen -> matrix : System.Drawing.Drawing2D.Matrix -> Void

	public Warp(method) : destPoints : cs.NativeArray<System.Drawing.PointF> -> srcRect : System.Drawing.RectangleF -> Void

	public Warp(method) : destPoints : cs.NativeArray<System.Drawing.PointF> -> srcRect : System.Drawing.RectangleF -> matrix : System.Drawing.Drawing2D.Matrix -> warpMode : System.Drawing.Drawing2D.WarpMode -> flatness : Single -> Void

	public Warp(method) : destPoints : cs.NativeArray<System.Drawing.PointF> -> srcRect : System.Drawing.RectangleF -> matrix : System.Drawing.Drawing2D.Matrix -> warpMode : System.Drawing.Drawing2D.WarpMode -> Void

	public Warp(method) : destPoints : cs.NativeArray<System.Drawing.PointF> -> srcRect : System.Drawing.RectangleF -> matrix : System.Drawing.Drawing2D.Matrix -> Void

	get_PointCount(method) : Void -> Int

	get_PathTypes(method) : Void -> cs.NativeArray<cs.types.UInt8>

	get_PathPoints(method) : Void -> cs.NativeArray<System.Drawing.PointF>

}