extern class System.String implements System.Collections.Generic.IEnumerable`1<cs.types.Char16> implements System.ICloneable implements System.IComparable implements System.IConvertible implements System.Collections.IEnumerable implements System.IComparable`1<String> implements System.IEquatable`1<String> implements ArrayAccess<cs.types.Char16>{
	public new(method) : value : cs.NativeArray<cs.types.Char16> -> startIndex : Int -> length : Int -> Void

	public new(method) : c : cs.types.Char16 -> count : Int -> Void

	public new(method) : value : cs.NativeArray<cs.types.Char16> -> Void

	public Length((get,never)) : Int

	get_Chars(method) : index : Int -> cs.types.Char16

	public Clone(method) : Void -> Dynamic

	public GetTypeCode(method) : Void -> System.TypeCode

	public CopyTo(method) : sourceIndex : Int -> destination : cs.NativeArray<cs.types.Char16> -> destinationIndex : Int -> count : Int -> Void

	public ToCharArray(method) : Void -> cs.NativeArray<cs.types.Char16>

	public ToCharArray(method) : startIndex : Int -> length : Int -> cs.NativeArray<cs.types.Char16>

	public Split(method) : separator : cs.NativeArray<cs.types.Char16> -> cs.NativeArray<String>

	public Split(method) : separator : cs.NativeArray<String> -> options : System.StringSplitOptions -> cs.NativeArray<String>

	public Split(method) : separator : cs.NativeArray<cs.types.Char16> -> options : System.StringSplitOptions -> cs.NativeArray<String>

	public Split(method) : separator : cs.NativeArray<String> -> count : Int -> options : System.StringSplitOptions -> cs.NativeArray<String>

	public Split(method) : separator : cs.NativeArray<cs.types.Char16> -> count : Int -> options : System.StringSplitOptions -> cs.NativeArray<String>

	public Split(method) : separator : cs.NativeArray<cs.types.Char16> -> count : Int -> cs.NativeArray<String>

	public Substring(method) : startIndex : Int -> String

	public Substring(method) : startIndex : Int -> length : Int -> String

	public Trim(method) : Void -> String

	public Trim(method) : trimChars : cs.NativeArray<cs.types.Char16> -> String

	public TrimStart(method) : trimChars : cs.NativeArray<cs.types.Char16> -> String

	public TrimEnd(method) : trimChars : cs.NativeArray<cs.types.Char16> -> String

	public CompareTo(method) : value : Dynamic -> Int

	public CompareTo(method) : strB : String -> Int

	public EndsWith(method) : value : String -> Bool

	public EndsWith(method) : value : String -> comparisonType : System.StringComparison -> Bool

	public EndsWith(method) : value : String -> ignoreCase : Bool -> culture : System.Globalization.CultureInfo -> Bool

	public IndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> Int

	public IndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> startIndex : Int -> count : Int -> Int

	public IndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> startIndex : Int -> Int

	public IndexOf(method) : value : String -> comparisonType : System.StringComparison -> Int

	public IndexOf(method) : value : String -> startIndex : Int -> count : Int -> Int

	public IndexOf(method) : value : String -> startIndex : Int -> Int

	public IndexOf(method) : value : String -> Int

	public IndexOf(method) : value : cs.types.Char16 -> startIndex : Int -> count : Int -> Int

	public IndexOf(method) : value : cs.types.Char16 -> startIndex : Int -> Int

	public IndexOf(method) : value : cs.types.Char16 -> Int

	public IndexOf(method) : value : String -> startIndex : Int -> count : Int -> comparisonType : System.StringComparison -> Int

	public IndexOf(method) : value : String -> startIndex : Int -> comparisonType : System.StringComparison -> Int

	public LastIndexOf(method) : value : String -> comparisonType : System.StringComparison -> Int

	public LastIndexOf(method) : value : String -> startIndex : Int -> count : Int -> Int

	public LastIndexOf(method) : value : String -> startIndex : Int -> Int

	public LastIndexOf(method) : value : String -> Int

	public LastIndexOf(method) : value : cs.types.Char16 -> startIndex : Int -> count : Int -> Int

	public LastIndexOf(method) : value : cs.types.Char16 -> startIndex : Int -> Int

	public LastIndexOf(method) : value : cs.types.Char16 -> Int

	public LastIndexOf(method) : value : String -> startIndex : Int -> count : Int -> comparisonType : System.StringComparison -> Int

	public LastIndexOf(method) : value : String -> startIndex : Int -> comparisonType : System.StringComparison -> Int

	public LastIndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> Int

	public LastIndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> startIndex : Int -> count : Int -> Int

	public LastIndexOfAny(method) : anyOf : cs.NativeArray<cs.types.Char16> -> startIndex : Int -> Int

	public Contains(method) : value : String -> Bool

	public Normalize(method) : Void -> String

	public Normalize(method) : normalizationForm : System.Text.NormalizationForm -> String

	public IsNormalized(method) : Void -> Bool

	public IsNormalized(method) : normalizationForm : System.Text.NormalizationForm -> Bool

	public Remove(method) : startIndex : Int -> String

	public Remove(method) : startIndex : Int -> count : Int -> String

	public PadLeft(method) : totalWidth : Int -> String

	public PadLeft(method) : totalWidth : Int -> paddingChar : cs.types.Char16 -> String

	public PadRight(method) : totalWidth : Int -> String

	public PadRight(method) : totalWidth : Int -> paddingChar : cs.types.Char16 -> String

	public StartsWith(method) : value : String -> Bool

	public StartsWith(method) : value : String -> ignoreCase : Bool -> culture : System.Globalization.CultureInfo -> Bool

	public StartsWith(method) : value : String -> comparisonType : System.StringComparison -> Bool

	public Replace(method) : oldChar : cs.types.Char16 -> newChar : cs.types.Char16 -> String

	public Replace(method) : oldValue : String -> newValue : String -> String

	public ToLower(method) : Void -> String

	public ToLower(method) : culture : System.Globalization.CultureInfo -> String

	public ToLowerInvariant(method) : Void -> String

	public ToUpper(method) : Void -> String

	public ToUpper(method) : culture : System.Globalization.CultureInfo -> String

	public ToUpperInvariant(method) : Void -> String

	public ToString(method) : Void -> String

	public ToString(method) : provider : System.IFormatProvider -> String

	public Insert(method) : startIndex : Int -> value : String -> String

	get_Length(method) : Void -> Int

	public GetEnumerator(method) : Void -> System.CharEnumerator

	static public Empty((default,never)) : String

	static public Equals(method) : a : String -> b : String -> Bool

	static public Equals(method) : a : String -> b : String -> comparisonType : System.StringComparison -> Bool

	static public Compare(method) : strA : String -> strB : String -> Int

	static public Compare(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> culture : System.Globalization.CultureInfo -> options : System.Globalization.CompareOptions -> Int

	static public Compare(method) : strA : String -> strB : String -> culture : System.Globalization.CultureInfo -> options : System.Globalization.CompareOptions -> Int

	static public Compare(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> comparisonType : System.StringComparison -> Int

	static public Compare(method) : strA : String -> strB : String -> comparisonType : System.StringComparison -> Int

	static public Compare(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> ignoreCase : Bool -> culture : System.Globalization.CultureInfo -> Int

	static public Compare(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> ignoreCase : Bool -> Int

	static public Compare(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> Int

	static public Compare(method) : strA : String -> strB : String -> ignoreCase : Bool -> culture : System.Globalization.CultureInfo -> Int

	static public Compare(method) : strA : String -> strB : String -> ignoreCase : Bool -> Int

	static public CompareOrdinal(method) : strA : String -> strB : String -> Int

	static public CompareOrdinal(method) : strA : String -> indexA : Int -> strB : String -> indexB : Int -> length : Int -> Int

	static public IsNullOrEmpty(method) : value : String -> Bool

	static public Format(method) : format : String -> arg0 : Dynamic -> String

	static public Format(method) : provider : System.IFormatProvider -> format : String -> args : cs.NativeArray<Dynamic> -> String

	static public Format(method) : format : String -> args : cs.NativeArray<Dynamic> -> String

	static public Format(method) : format : String -> arg0 : Dynamic -> arg1 : Dynamic -> arg2 : Dynamic -> String

	static public Format(method) : format : String -> arg0 : Dynamic -> arg1 : Dynamic -> String

	static public Copy(method) : str : String -> String

	static public Concat(method) : arg0 : Dynamic -> String

	static public Concat<M0 : Concat.M0>(method) : values : System.Collections.Generic.IEnumerable`1<Concat.M0> -> String

	static public Concat(method) : values : System.Collections.Generic.IEnumerable`1<String> -> String

	static public Concat(method) : values : cs.NativeArray<String> -> String

	static public Concat(method) : args : cs.NativeArray<Dynamic> -> String

	static public Concat(method) : str0 : String -> str1 : String -> str2 : String -> str3 : String -> String

	static public Concat(method) : str0 : String -> str1 : String -> str2 : String -> String

	static public Concat(method) : str0 : String -> str1 : String -> String

	static public Concat(method) : arg0 : Dynamic -> arg1 : Dynamic -> arg2 : Dynamic -> arg3 : Dynamic -> String

	static public Concat(method) : arg0 : Dynamic -> arg1 : Dynamic -> arg2 : Dynamic -> String

	static public Concat(method) : arg0 : Dynamic -> arg1 : Dynamic -> String

	static public Intern(method) : str : String -> String

	static public IsInterned(method) : str : String -> String

	static public Join(method) : separator : String -> value : cs.NativeArray<String> -> String

	static public Join<M0 : Join.M0>(method) : separator : String -> values : System.Collections.Generic.IEnumerable`1<Join.M0> -> String

	static public Join(method) : separator : String -> values : cs.NativeArray<Dynamic> -> String

	static public Join(method) : separator : String -> values : System.Collections.Generic.IEnumerable`1<String> -> String

	static public Join(method) : separator : String -> value : cs.NativeArray<String> -> startIndex : Int -> count : Int -> String

	static public IsNullOrWhiteSpace(method) : value : String -> Bool

	static public op_Equality(method) : a : String -> b : String -> Bool

	static public op_Inequality(method) : a : String -> b : String -> Bool

}