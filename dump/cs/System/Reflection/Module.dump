extern class System.Reflection.Module implements System.Reflection.ICustomAttributeProvider implements System.Runtime.InteropServices._Module implements System.Runtime.Serialization.ISerializable{
	new(method) : Void -> Void

	public MetadataToken((get,never)) : Int

	public FullyQualifiedName((get,never)) : String

	public ModuleVersionId((get,never)) : System.Guid

	public MDStreamVersion((get,never)) : Int

	public ScopeName((get,never)) : String

	public Name((get,never)) : String

	public Assembly((get,never)) : System.Reflection.Assembly

	public ModuleHandle((get,never)) : System.ModuleHandle

	get_ModuleHandle(method) : Void -> System.ModuleHandle

	public GetField(method) : name : String -> System.Reflection.FieldInfo

	public GetField(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo

	public GetFields(method) : Void -> cs.NativeArray<System.Reflection.FieldInfo>

	public GetFields(method) : bindingFlags : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.FieldInfo>

	public GetMethod(method) : name : String -> System.Reflection.MethodInfo

	public GetMethod(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> callConvention : System.Reflection.CallingConventions -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.MethodInfo

	public GetMethod(method) : name : String -> types : cs.NativeArray<System.Type> -> System.Reflection.MethodInfo

	public GetMethods(method) : Void -> cs.NativeArray<System.Reflection.MethodInfo>

	public GetMethods(method) : bindingFlags : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MethodInfo>

	public GetObjectData(method) : info : System.Runtime.Serialization.SerializationInfo -> context : System.Runtime.Serialization.StreamingContext -> Void

	public GetType(method) : className : String -> System.Type

	public GetType(method) : className : String -> throwOnError : Bool -> ignoreCase : Bool -> System.Type

	public GetType(method) : className : String -> ignoreCase : Bool -> System.Type

	public ToString(method) : Void -> String

	public ResolveField(method) : metadataToken : Int -> System.Reflection.FieldInfo

	public ResolveField(method) : metadataToken : Int -> genericTypeArguments : cs.NativeArray<System.Type> -> genericMethodArguments : cs.NativeArray<System.Type> -> System.Reflection.FieldInfo

	public ResolveMember(method) : metadataToken : Int -> System.Reflection.MemberInfo

	public ResolveMember(method) : metadataToken : Int -> genericTypeArguments : cs.NativeArray<System.Type> -> genericMethodArguments : cs.NativeArray<System.Type> -> System.Reflection.MemberInfo

	public ResolveMethod(method) : metadataToken : Int -> System.Reflection.MethodBase

	public ResolveMethod(method) : metadataToken : Int -> genericTypeArguments : cs.NativeArray<System.Type> -> genericMethodArguments : cs.NativeArray<System.Type> -> System.Reflection.MethodBase

	public ResolveType(method) : metadataToken : Int -> System.Type

	public ResolveType(method) : metadataToken : Int -> genericTypeArguments : cs.NativeArray<System.Type> -> genericMethodArguments : cs.NativeArray<System.Type> -> System.Type

	get_Assembly(method) : Void -> System.Reflection.Assembly

	get_Name(method) : Void -> String

	get_ScopeName(method) : Void -> String

	get_MDStreamVersion(method) : Void -> Int

	get_ModuleVersionId(method) : Void -> System.Guid

	get_FullyQualifiedName(method) : Void -> String

	get_MetadataToken(method) : Void -> Int

	public IsResource(method) : Void -> Bool

	public FindTypes(method) : filter : cs.system.reflection.TypeFilter -> filterCriteria : Dynamic -> cs.NativeArray<System.Type>

	public GetCustomAttributes(method) : inherit : Bool -> cs.NativeArray<Dynamic>

	public GetCustomAttributes(method) : attributeType : System.Type -> inherit : Bool -> cs.NativeArray<Dynamic>

	public GetCustomAttributesData(method) : Void -> System.Collections.Generic.IList`1<System.Reflection.CustomAttributeData>

	GetMethodImpl(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> callConvention : System.Reflection.CallingConventions -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.MethodInfo

	public GetPEKind(method) : peKind : cs.Out<System.Reflection.PortableExecutableKinds> -> machine : cs.Out<System.Reflection.ImageFileMachine> -> Void

	public IsDefined(method) : attributeType : System.Type -> inherit : Bool -> Bool

	public ResolveSignature(method) : metadataToken : Int -> cs.NativeArray<cs.types.UInt8>

	public ResolveString(method) : metadataToken : Int -> String

	public GetSignerCertificate(method) : Void -> System.Security.Cryptography.X509Certificates.X509Certificate

	public GetTypes(method) : Void -> cs.NativeArray<System.Type>

	static public FilterTypeNameIgnoreCase((default,never)) : cs.system.reflection.TypeFilter

	static public FilterTypeName((default,never)) : cs.system.reflection.TypeFilter

	static public op_Equality(method) : left : System.Reflection.Module -> right : System.Reflection.Module -> Bool

	static public op_Inequality(method) : left : System.Reflection.Module -> right : System.Reflection.Module -> Bool

}