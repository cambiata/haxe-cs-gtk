extern class System.Reflection.Emit.AssemblyBuilder extends System.Reflection.Assembly implements System.Runtime.InteropServices._AssemblyBuilder{
	public IsDynamic((get,never)) : Bool

	public GlobalAssemblyCache((get,never)) : Bool

	public ManifestModule((get,never)) : System.Reflection.Module

	public ReflectionOnly((get,never)) : Bool

	public ImageRuntimeVersion((get,never)) : String

	public Location((get,never)) : String

	public EntryPoint((get,never)) : System.Reflection.MethodInfo

	public CodeBase((get,never)) : String

	get_CodeBase(method) : Void -> String

	get_EntryPoint(method) : Void -> System.Reflection.MethodInfo

	get_Location(method) : Void -> String

	get_ImageRuntimeVersion(method) : Void -> String

	get_ReflectionOnly(method) : Void -> Bool

	public AddResourceFile(method) : name : String -> fileName : String -> Void

	public AddResourceFile(method) : name : String -> fileName : String -> attribute : System.Reflection.ResourceAttributes -> Void

	public DefineDynamicModule(method) : name : String -> System.Reflection.Emit.ModuleBuilder

	public DefineDynamicModule(method) : name : String -> fileName : String -> emitSymbolInfo : Bool -> System.Reflection.Emit.ModuleBuilder

	public DefineDynamicModule(method) : name : String -> fileName : String -> System.Reflection.Emit.ModuleBuilder

	public DefineDynamicModule(method) : name : String -> emitSymbolInfo : Bool -> System.Reflection.Emit.ModuleBuilder

	public DefineResource(method) : name : String -> description : String -> fileName : String -> System.Resources.IResourceWriter

	public DefineResource(method) : name : String -> description : String -> fileName : String -> attribute : System.Reflection.ResourceAttributes -> System.Resources.IResourceWriter

	public DefineUnmanagedResource(method) : resource : cs.NativeArray<cs.types.UInt8> -> Void

	public DefineUnmanagedResource(method) : resourceFileName : String -> Void

	public DefineVersionInfoResource(method) : Void -> Void

	public DefineVersionInfoResource(method) : product : String -> productVersion : String -> company : String -> copyright : String -> trademark : String -> Void

	public GetDynamicModule(method) : name : String -> System.Reflection.Emit.ModuleBuilder

	public GetExportedTypes(method) : Void -> cs.NativeArray<System.Type>

	public GetFile(method) : name : String -> System.IO.FileStream

	public GetFiles(method) : getResourceModules : Bool -> cs.NativeArray<System.IO.FileStream>

	public GetManifestResourceInfo(method) : resourceName : String -> System.Reflection.ManifestResourceInfo

	public GetManifestResourceNames(method) : Void -> cs.NativeArray<String>

	public GetManifestResourceStream(method) : name : String -> System.IO.Stream

	public GetManifestResourceStream(method) : type : System.Type -> name : String -> System.IO.Stream

	public Save(method) : assemblyFileName : String -> portableExecutableKind : System.Reflection.PortableExecutableKinds -> imageFileMachine : System.Reflection.ImageFileMachine -> Void

	public Save(method) : assemblyFileName : String -> Void

	public SetEntryPoint(method) : entryMethod : System.Reflection.MethodInfo -> Void

	public SetEntryPoint(method) : entryMethod : System.Reflection.MethodInfo -> fileKind : System.Reflection.Emit.PEFileKinds -> Void

	public SetCustomAttribute(method) : customBuilder : System.Reflection.Emit.CustomAttributeBuilder -> Void

	public SetCustomAttribute(method) : con : System.Reflection.ConstructorInfo -> binaryAttribute : cs.NativeArray<cs.types.UInt8> -> Void

	public GetType(method) : name : String -> throwOnError : Bool -> ignoreCase : Bool -> System.Type

	public GetModule(method) : name : String -> System.Reflection.Module

	public GetModules(method) : getResourceModules : Bool -> cs.NativeArray<System.Reflection.Module>

	public GetReferencedAssemblies(method) : Void -> cs.NativeArray<System.Reflection.AssemblyName>

	public GetLoadedModules(method) : getResourceModules : Bool -> cs.NativeArray<System.Reflection.Module>

	public GetSatelliteAssembly(method) : culture : System.Globalization.CultureInfo -> System.Reflection.Assembly

	public GetSatelliteAssembly(method) : culture : System.Globalization.CultureInfo -> version : System.Version -> System.Reflection.Assembly

	get_ManifestModule(method) : Void -> System.Reflection.Module

	get_GlobalAssemblyCache(method) : Void -> Bool

	get_IsDynamic(method) : Void -> Bool

}