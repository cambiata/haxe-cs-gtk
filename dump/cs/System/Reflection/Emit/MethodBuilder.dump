extern class System.Reflection.Emit.MethodBuilder extends System.Reflection.MethodInfo implements System.Runtime.InteropServices._MethodBuilder{
	public Module((get,never)) : System.Reflection.Module

	public IsGenericMethod((get,never)) : Bool

	public IsGenericMethodDefinition((get,never)) : Bool

	public Signature((get,never)) : String

	public CallingConvention((get,never)) : System.Reflection.CallingConventions

	public ReturnTypeCustomAttributes((get,never)) : System.Reflection.ICustomAttributeProvider

	public Attributes((get,never)) : System.Reflection.MethodAttributes

	public Name((get,never)) : String

	public DeclaringType((get,never)) : System.Type

	public ReflectedType((get,never)) : System.Type

	public ReturnType((get,never)) : System.Type

	public MethodHandle((get,never)) : System.RuntimeMethodHandle

	public InitLocals((get,set)) : Bool

	public ContainsGenericParameters((get,never)) : Bool

	get_ContainsGenericParameters(method) : Void -> Bool

	get_InitLocals(method) : Void -> Bool

	set_InitLocals(method) : value : Bool -> Bool

	get_MethodHandle(method) : Void -> System.RuntimeMethodHandle

	get_ReturnType(method) : Void -> System.Type

	get_ReflectedType(method) : Void -> System.Type

	get_DeclaringType(method) : Void -> System.Type

	get_Name(method) : Void -> String

	get_Attributes(method) : Void -> System.Reflection.MethodAttributes

	get_ReturnTypeCustomAttributes(method) : Void -> System.Reflection.ICustomAttributeProvider

	get_CallingConvention(method) : Void -> System.Reflection.CallingConventions

	get_Signature(method) : Void -> String

	public GetToken(method) : Void -> System.Reflection.Emit.MethodToken

	public GetBaseDefinition(method) : Void -> System.Reflection.MethodInfo

	public GetMethodImplementationFlags(method) : Void -> System.Reflection.MethodImplAttributes

	public GetParameters(method) : Void -> cs.NativeArray<System.Reflection.ParameterInfo>

	public GetModule(method) : Void -> System.Reflection.Module

	public CreateMethodBody(method) : il : cs.NativeArray<cs.types.UInt8> -> count : Int -> Void

	public Invoke(method) : obj : Dynamic -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> parameters : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> Dynamic

	public IsDefined(method) : attributeType : System.Type -> inherit : Bool -> Bool

	public GetCustomAttributes(method) : inherit : Bool -> cs.NativeArray<Dynamic>

	public GetCustomAttributes(method) : attributeType : System.Type -> inherit : Bool -> cs.NativeArray<Dynamic>

	public GetILGenerator(method) : Void -> System.Reflection.Emit.ILGenerator

	public GetILGenerator(method) : size : Int -> System.Reflection.Emit.ILGenerator

	public DefineParameter(method) : position : Int -> attributes : System.Reflection.ParameterAttributes -> strParamName : String -> System.Reflection.Emit.ParameterBuilder

	public SetCustomAttribute(method) : customBuilder : System.Reflection.Emit.CustomAttributeBuilder -> Void

	public SetCustomAttribute(method) : con : System.Reflection.ConstructorInfo -> binaryAttribute : cs.NativeArray<cs.types.UInt8> -> Void

	public SetImplementationFlags(method) : attributes : System.Reflection.MethodImplAttributes -> Void

	public AddDeclarativeSecurity(method) : action : System.Security.Permissions.SecurityAction -> pset : System.Security.PermissionSet -> Void

	public SetMarshal(method) : unmanagedMarshal : System.Reflection.Emit.UnmanagedMarshal -> Void

	public SetSymCustomAttribute(method) : name : String -> data : cs.NativeArray<cs.types.UInt8> -> Void

	public ToString(method) : Void -> String

	public MakeGenericMethod(method) : typeArguments : cs.NativeArray<System.Type> -> System.Reflection.MethodInfo

	get_IsGenericMethodDefinition(method) : Void -> Bool

	get_IsGenericMethod(method) : Void -> Bool

	public GetGenericMethodDefinition(method) : Void -> System.Reflection.MethodInfo

	public GetGenericArguments(method) : Void -> cs.NativeArray<System.Type>

	public DefineGenericParameters(method) : names : cs.NativeArray<String> -> cs.NativeArray<System.Reflection.Emit.GenericTypeParameterBuilder>

	public SetReturnType(method) : returnType : System.Type -> Void

	public SetParameters(method) : parameterTypes : cs.NativeArray<System.Type> -> Void

	public SetSignature(method) : returnType : System.Type -> returnTypeRequiredCustomModifiers : cs.NativeArray<System.Type> -> returnTypeOptionalCustomModifiers : cs.NativeArray<System.Type> -> parameterTypes : cs.NativeArray<System.Type> -> parameterTypeRequiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> parameterTypeOptionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> Void

	get_Module(method) : Void -> System.Reflection.Module

}