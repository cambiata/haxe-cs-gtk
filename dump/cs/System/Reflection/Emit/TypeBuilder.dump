extern class System.Reflection.Emit.TypeBuilder extends System.Type implements System.Runtime.InteropServices._TypeBuilder{
	public DeclaringMethod((get,never)) : System.Reflection.MethodBase

	public GenericParameterPosition((get,never)) : Int

	public IsGenericType((get,never)) : Bool

	public IsGenericTypeDefinition((get,never)) : Bool

	public GenericParameterAttributes((get,never)) : System.Reflection.GenericParameterAttributes

	public IsGenericParameter((get,never)) : Bool

	public ContainsGenericParameters((get,never)) : Bool

	public TypeToken((get,never)) : System.Reflection.Emit.TypeToken

	public TypeHandle((get,never)) : System.RuntimeTypeHandle

	public ReflectedType((get,never)) : System.Type

	public Size((get,never)) : Int

	public PackingSize((get,never)) : System.Reflection.Emit.PackingSize

	public Namespace((get,never)) : String

	public Name((get,never)) : String

	public Module((get,never)) : System.Reflection.Module

	public GUID((get,never)) : System.Guid

	public FullName((get,never)) : String

	public UnderlyingSystemType((get,never)) : System.Type

	public DeclaringType((get,never)) : System.Type

	public BaseType((get,never)) : System.Type

	public AssemblyQualifiedName((get,never)) : String

	public Assembly((get,never)) : System.Reflection.Assembly

	GetAttributeFlagsImpl(method) : Void -> System.Reflection.TypeAttributes

	get_Assembly(method) : Void -> System.Reflection.Assembly

	get_AssemblyQualifiedName(method) : Void -> String

	get_BaseType(method) : Void -> System.Type

	get_DeclaringType(method) : Void -> System.Type

	public IsSubclassOf(method) : c : System.Type -> Bool

	get_UnderlyingSystemType(method) : Void -> System.Type

	get_FullName(method) : Void -> String

	get_GUID(method) : Void -> System.Guid

	get_Module(method) : Void -> System.Reflection.Module

	get_Name(method) : Void -> String

	get_Namespace(method) : Void -> String

	get_PackingSize(method) : Void -> System.Reflection.Emit.PackingSize

	get_Size(method) : Void -> Int

	get_ReflectedType(method) : Void -> System.Type

	public AddDeclarativeSecurity(method) : action : System.Security.Permissions.SecurityAction -> pset : System.Security.PermissionSet -> Void

	public AddInterfaceImplementation(method) : interfaceType : System.Type -> Void

	GetConstructorImpl(method) : bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> callConvention : System.Reflection.CallingConventions -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.ConstructorInfo

	public IsDefined(method) : attributeType : System.Type -> inherit : Bool -> Bool

	public GetCustomAttributes(method) : inherit : Bool -> cs.NativeArray<Dynamic>

	public GetCustomAttributes(method) : attributeType : System.Type -> inherit : Bool -> cs.NativeArray<Dynamic>

	public DefineNestedType(method) : name : String -> System.Reflection.Emit.TypeBuilder

	public DefineNestedType(method) : name : String -> attr : System.Reflection.TypeAttributes -> parent : System.Type -> packSize : System.Reflection.Emit.PackingSize -> System.Reflection.Emit.TypeBuilder

	public DefineNestedType(method) : name : String -> attr : System.Reflection.TypeAttributes -> parent : System.Type -> typeSize : Int -> System.Reflection.Emit.TypeBuilder

	public DefineNestedType(method) : name : String -> attr : System.Reflection.TypeAttributes -> parent : System.Type -> interfaces : cs.NativeArray<System.Type> -> System.Reflection.Emit.TypeBuilder

	public DefineNestedType(method) : name : String -> attr : System.Reflection.TypeAttributes -> parent : System.Type -> System.Reflection.Emit.TypeBuilder

	public DefineNestedType(method) : name : String -> attr : System.Reflection.TypeAttributes -> System.Reflection.Emit.TypeBuilder

	public DefineConstructor(method) : attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> parameterTypes : cs.NativeArray<System.Type> -> System.Reflection.Emit.ConstructorBuilder

	public DefineConstructor(method) : attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> parameterTypes : cs.NativeArray<System.Type> -> requiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> optionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> System.Reflection.Emit.ConstructorBuilder

	public DefineDefaultConstructor(method) : attributes : System.Reflection.MethodAttributes -> System.Reflection.Emit.ConstructorBuilder

	public DefineMethod(method) : name : String -> attributes : System.Reflection.MethodAttributes -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> System.Reflection.Emit.MethodBuilder

	public DefineMethod(method) : name : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> System.Reflection.Emit.MethodBuilder

	public DefineMethod(method) : name : String -> attributes : System.Reflection.MethodAttributes -> System.Reflection.Emit.MethodBuilder

	public DefineMethod(method) : name : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> returnTypeRequiredCustomModifiers : cs.NativeArray<System.Type> -> returnTypeOptionalCustomModifiers : cs.NativeArray<System.Type> -> parameterTypes : cs.NativeArray<System.Type> -> parameterTypeRequiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> parameterTypeOptionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> System.Reflection.Emit.MethodBuilder

	public DefineMethod(method) : name : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> System.Reflection.Emit.MethodBuilder

	public DefinePInvokeMethod(method) : name : String -> dllName : String -> entryName : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> nativeCallConv : System.Runtime.InteropServices.CallingConvention -> nativeCharSet : System.Runtime.InteropServices.CharSet -> System.Reflection.Emit.MethodBuilder

	public DefinePInvokeMethod(method) : name : String -> dllName : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> nativeCallConv : System.Runtime.InteropServices.CallingConvention -> nativeCharSet : System.Runtime.InteropServices.CharSet -> System.Reflection.Emit.MethodBuilder

	public DefinePInvokeMethod(method) : name : String -> dllName : String -> entryName : String -> attributes : System.Reflection.MethodAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> returnTypeRequiredCustomModifiers : cs.NativeArray<System.Type> -> returnTypeOptionalCustomModifiers : cs.NativeArray<System.Type> -> parameterTypes : cs.NativeArray<System.Type> -> parameterTypeRequiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> parameterTypeOptionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> nativeCallConv : System.Runtime.InteropServices.CallingConvention -> nativeCharSet : System.Runtime.InteropServices.CharSet -> System.Reflection.Emit.MethodBuilder

	public DefineMethodOverride(method) : methodInfoBody : System.Reflection.MethodInfo -> methodInfoDeclaration : System.Reflection.MethodInfo -> Void

	public DefineField(method) : fieldName : String -> type : System.Type -> attributes : System.Reflection.FieldAttributes -> System.Reflection.Emit.FieldBuilder

	public DefineField(method) : fieldName : String -> type : System.Type -> requiredCustomModifiers : cs.NativeArray<System.Type> -> optionalCustomModifiers : cs.NativeArray<System.Type> -> attributes : System.Reflection.FieldAttributes -> System.Reflection.Emit.FieldBuilder

	public DefineProperty(method) : name : String -> attributes : System.Reflection.PropertyAttributes -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> System.Reflection.Emit.PropertyBuilder

	public DefineProperty(method) : name : String -> attributes : System.Reflection.PropertyAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> returnTypeRequiredCustomModifiers : cs.NativeArray<System.Type> -> returnTypeOptionalCustomModifiers : cs.NativeArray<System.Type> -> parameterTypes : cs.NativeArray<System.Type> -> parameterTypeRequiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> parameterTypeOptionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> System.Reflection.Emit.PropertyBuilder

	public DefineProperty(method) : name : String -> attributes : System.Reflection.PropertyAttributes -> returnType : System.Type -> returnTypeRequiredCustomModifiers : cs.NativeArray<System.Type> -> returnTypeOptionalCustomModifiers : cs.NativeArray<System.Type> -> parameterTypes : cs.NativeArray<System.Type> -> parameterTypeRequiredCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> parameterTypeOptionalCustomModifiers : cs.NativeArray<cs.NativeArray<System.Type>> -> System.Reflection.Emit.PropertyBuilder

	public DefineProperty(method) : name : String -> attributes : System.Reflection.PropertyAttributes -> callingConvention : System.Reflection.CallingConventions -> returnType : System.Type -> parameterTypes : cs.NativeArray<System.Type> -> System.Reflection.Emit.PropertyBuilder

	public DefineTypeInitializer(method) : Void -> System.Reflection.Emit.ConstructorBuilder

	public CreateType(method) : Void -> System.Type

	public GetConstructors(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.ConstructorInfo>

	public GetElementType(method) : Void -> System.Type

	public GetEvent(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.EventInfo

	public GetEvents(method) : Void -> cs.NativeArray<System.Reflection.EventInfo>

	public GetEvents(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.EventInfo>

	public GetField(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo

	public GetFields(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.FieldInfo>

	public GetInterface(method) : name : String -> ignoreCase : Bool -> System.Type

	public GetInterfaces(method) : Void -> cs.NativeArray<System.Type>

	public GetMember(method) : name : String -> type : System.Reflection.MemberTypes -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>

	public GetMembers(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>

	public GetMethods(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MethodInfo>

	GetMethodImpl(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> callConvention : System.Reflection.CallingConventions -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.MethodInfo

	public GetNestedType(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Type

	public GetNestedTypes(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Type>

	public GetProperties(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.PropertyInfo>

	GetPropertyImpl(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> returnType : System.Type -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.PropertyInfo

	HasElementTypeImpl(method) : Void -> Bool

	public InvokeMember(method) : name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> culture : System.Globalization.CultureInfo -> namedParameters : cs.NativeArray<String> -> Dynamic

	IsArrayImpl(method) : Void -> Bool

	IsByRefImpl(method) : Void -> Bool

	IsCOMObjectImpl(method) : Void -> Bool

	IsPointerImpl(method) : Void -> Bool

	IsPrimitiveImpl(method) : Void -> Bool

	IsValueTypeImpl(method) : Void -> Bool

	public MakeArrayType(method) : Void -> System.Type

	public MakeArrayType(method) : rank : Int -> System.Type

	public MakeByRefType(method) : Void -> System.Type

	public MakeGenericType(method) : typeArguments : cs.NativeArray<System.Type> -> System.Type

	public MakePointerType(method) : Void -> System.Type

	get_TypeHandle(method) : Void -> System.RuntimeTypeHandle

	public SetCustomAttribute(method) : customBuilder : System.Reflection.Emit.CustomAttributeBuilder -> Void

	public SetCustomAttribute(method) : con : System.Reflection.ConstructorInfo -> binaryAttribute : cs.NativeArray<cs.types.UInt8> -> Void

	public DefineEvent(method) : name : String -> attributes : System.Reflection.EventAttributes -> eventtype : System.Type -> System.Reflection.Emit.EventBuilder

	public DefineInitializedData(method) : name : String -> data : cs.NativeArray<cs.types.UInt8> -> attributes : System.Reflection.FieldAttributes -> System.Reflection.Emit.FieldBuilder

	public DefineUninitializedData(method) : name : String -> size : Int -> attributes : System.Reflection.FieldAttributes -> System.Reflection.Emit.FieldBuilder

	get_TypeToken(method) : Void -> System.Reflection.Emit.TypeToken

	public SetParent(method) : parent : System.Type -> Void

	public GetInterfaceMap(method) : interfaceType : System.Type -> System.Reflection.InterfaceMapping

	public ToString(method) : Void -> String

	public IsAssignableFrom(method) : c : System.Type -> Bool

	public IsCreated(method) : Void -> Bool

	public GetGenericArguments(method) : Void -> cs.NativeArray<System.Type>

	public GetGenericTypeDefinition(method) : Void -> System.Type

	get_ContainsGenericParameters(method) : Void -> Bool

	get_IsGenericParameter(method) : Void -> Bool

	get_GenericParameterAttributes(method) : Void -> System.Reflection.GenericParameterAttributes

	get_IsGenericTypeDefinition(method) : Void -> Bool

	get_IsGenericType(method) : Void -> Bool

	get_GenericParameterPosition(method) : Void -> Int

	get_DeclaringMethod(method) : Void -> System.Reflection.MethodBase

	public DefineGenericParameters(method) : names : cs.NativeArray<String> -> cs.NativeArray<System.Reflection.Emit.GenericTypeParameterBuilder>

	static public UnspecifiedTypeSize((default,never)) : Int

	static public GetConstructor(method) : type : System.Type -> constructor : System.Reflection.ConstructorInfo -> System.Reflection.ConstructorInfo

	static public GetConstructor(method) : type : System.Type -> constructor : System.Reflection.ConstructorInfo -> System.Reflection.ConstructorInfo

	static public GetMethod(method) : type : System.Type -> method : System.Reflection.MethodInfo -> System.Reflection.MethodInfo

	static public GetMethod(method) : type : System.Type -> method : System.Reflection.MethodInfo -> System.Reflection.MethodInfo

	static public GetField(method) : type : System.Type -> field : System.Reflection.FieldInfo -> System.Reflection.FieldInfo

	static public GetField(method) : type : System.Type -> field : System.Reflection.FieldInfo -> System.Reflection.FieldInfo

}