extern interface System.Reflection.IReflect{
	public UnderlyingSystemType((get,never)) : System.Type

	get_UnderlyingSystemType(method) : Void -> System.Type

	public GetField(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo

	public GetFields(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.FieldInfo>

	public GetMember(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>

	public GetMembers(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>

	public GetMethod(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.MethodInfo

	public GetMethod(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.MethodInfo

	public GetMethods(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MethodInfo>

	public GetProperties(method) : bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.PropertyInfo>

	public GetProperty(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.PropertyInfo

	public GetProperty(method) : name : String -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> returnType : System.Type -> types : cs.NativeArray<System.Type> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> System.Reflection.PropertyInfo

	public InvokeMember(method) : name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> modifiers : cs.NativeArray<System.Reflection.ParameterModifier> -> culture : System.Globalization.CultureInfo -> namedParameters : cs.NativeArray<String> -> Dynamic

}