extern class System.Guid extends System.ValueType implements System.IComparable implements System.IFormattable implements System.IComparable`1<System.Guid> implements System.IEquatable`1<System.Guid>{
	public new(method) : b : cs.NativeArray<cs.types.UInt8> -> Void

	public new(method) : a : UInt -> b : cs.types.UInt16 -> c : cs.types.UInt16 -> d : cs.types.UInt8 -> e : cs.types.UInt8 -> f : cs.types.UInt8 -> g : cs.types.UInt8 -> h : cs.types.UInt8 -> i : cs.types.UInt8 -> j : cs.types.UInt8 -> k : cs.types.UInt8 -> Void

	public new(method) : a : Int -> b : cs.types.Int16 -> c : cs.types.Int16 -> d : cs.types.UInt8 -> e : cs.types.UInt8 -> f : cs.types.UInt8 -> g : cs.types.UInt8 -> h : cs.types.UInt8 -> i : cs.types.UInt8 -> j : cs.types.UInt8 -> k : cs.types.UInt8 -> Void

	public new(method) : a : Int -> b : cs.types.Int16 -> c : cs.types.Int16 -> d : cs.NativeArray<cs.types.UInt8> -> Void

	public new(method) : g : String -> Void

	public CompareTo(method) : value : Dynamic -> Int

	public CompareTo(method) : value : System.Guid -> Int

	public ToByteArray(method) : Void -> cs.NativeArray<cs.types.UInt8>

	public ToString(method) : Void -> String

	public ToString(method) : format : String -> provider : System.IFormatProvider -> String

	public ToString(method) : format : String -> String

	static public Empty((default,never)) : System.Guid

	static public NewGuid(method) : Void -> System.Guid

	static public Parse(method) : input : String -> System.Guid

	static public ParseExact(method) : input : String -> format : String -> System.Guid

	static public TryParse(method) : input : String -> result : cs.Out<System.Guid> -> Bool

	static public TryParseExact(method) : input : String -> format : String -> result : cs.Out<System.Guid> -> Bool

	static public op_Equality(method) : a : System.Guid -> b : System.Guid -> Bool

	static public op_Inequality(method) : a : System.Guid -> b : System.Guid -> Bool

}