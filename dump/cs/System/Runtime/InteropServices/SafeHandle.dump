extern class System.Runtime.InteropServices.SafeHandle extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements System.IDisposable{
	new(method) : invalidHandleValue : System.IntPtr -> ownsHandle : Bool -> Void

	public IsInvalid((get,never)) : Bool

	public IsClosed((get,never)) : Bool

	handle(var) : System.IntPtr

	public Close(method) : Void -> Void

	public DangerousAddRef(method) : success : cs.Ref<Bool> -> Void

	public DangerousGetHandle(method) : Void -> System.IntPtr

	public DangerousRelease(method) : Void -> Void

	public Dispose(method) : Void -> Void

	Dispose(method) : disposing : Bool -> Void

	public SetHandleAsInvalid(method) : Void -> Void

	ReleaseHandle(method) : Void -> Bool

	SetHandle(method) : handle : System.IntPtr -> Void

	get_IsClosed(method) : Void -> Bool

	get_IsInvalid(method) : Void -> Bool

	Finalize(method) : Void -> Void

}