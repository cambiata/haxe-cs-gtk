extern class System.Activator implements System.Runtime.InteropServices._Activator{
	static public CreateComInstanceFrom(method) : assemblyName : String -> typeName : String -> System.Runtime.Remoting.ObjectHandle

	static public CreateComInstanceFrom(method) : assemblyName : String -> typeName : String -> hashValue : cs.NativeArray<cs.types.UInt8> -> hashAlgorithm : System.Configuration.Assemblies.AssemblyHashAlgorithm -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : assemblyFile : String -> typeName : String -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : domain : System.AppDomain -> assemblyFile : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : assemblyFile : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : domain : System.AppDomain -> assemblyFile : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> securityAttributes : System.Security.Policy.Evidence -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : domain : System.AppDomain -> assemblyFile : String -> typeName : String -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : assemblyFile : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> securityInfo : System.Security.Policy.Evidence -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstanceFrom(method) : assemblyFile : String -> typeName : String -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : assemblyName : String -> typeName : String -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : domain : System.AppDomain -> assemblyName : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : assemblyName : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : type : System.Type -> nonPublic : Bool -> Dynamic

	static public CreateInstance(method) : type : System.Type -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> Dynamic

	static public CreateInstance(method) : type : System.Type -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> Dynamic

	static public CreateInstance(method) : type : System.Type -> args : cs.NativeArray<Dynamic> -> activationAttributes : cs.NativeArray<Dynamic> -> Dynamic

	static public CreateInstance(method) : type : System.Type -> args : cs.NativeArray<Dynamic> -> Dynamic

	static public CreateInstance(method) : type : System.Type -> Dynamic

	static public CreateInstance<M0 : CreateInstance.M0>(method) : Void -> CreateInstance.M0

	static public CreateInstance(method) : domain : System.AppDomain -> assemblyName : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> securityAttributes : System.Security.Policy.Evidence -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : domain : System.AppDomain -> assemblyName : String -> typeName : String -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : activationContext : System.ActivationContext -> activationCustomData : cs.NativeArray<String> -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : activationContext : System.ActivationContext -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : assemblyName : String -> typeName : String -> ignoreCase : Bool -> bindingAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> args : cs.NativeArray<Dynamic> -> culture : System.Globalization.CultureInfo -> activationAttributes : cs.NativeArray<Dynamic> -> securityInfo : System.Security.Policy.Evidence -> System.Runtime.Remoting.ObjectHandle

	static public CreateInstance(method) : assemblyName : String -> typeName : String -> activationAttributes : cs.NativeArray<Dynamic> -> System.Runtime.Remoting.ObjectHandle

	static public GetObject(method) : type : System.Type -> url : String -> Dynamic

	static public GetObject(method) : type : System.Type -> url : String -> state : Dynamic -> Dynamic

}