extern class Pango.GlyphString extends GLib.Opaque{
	public new(method) : raw : System.IntPtr -> Void

	public new(method) : Void -> Void

	public Width((get,never)) : Int

	public Size((never,set)) : Int

	public NumGlyphs((get,set)) : Int

	get_NumGlyphs(method) : Void -> Int

	set_NumGlyphs(method) : value : Int -> Int

	public Copy(method) : Void -> Pango.GlyphString

	set_Size(method) : value : Int -> Int

	public IndexToX(method) : text : String -> analysis : Pango.Analysis -> index_ : Int -> trailing : Bool -> Int

	public ExtentsRange(method) : start : Int -> end : Int -> font : Pango.Font -> ink_rect : Pango.Rectangle -> logical_rect : Pango.Rectangle -> Void

	public XToIndex(method) : text : String -> analysis : Pango.Analysis -> x_pos : Int -> index_ : cs.Out<Int> -> trailing : cs.Out<Int> -> Void

	public Extents(method) : font : Pango.Font -> ink_rect : Pango.Rectangle -> logical_rect : Pango.Rectangle -> Void

	get_Width(method) : Void -> Int

	public GetLogicalWidths(method) : text : String -> embedding_level : Int -> Int

	Free(method) : raw : System.IntPtr -> Void

	Finalize(method) : Void -> Void

	static public GType((get,never)) : GLib.GType

	static public Zero(var) : Pango.GlyphString

	static get_GType(method) : Void -> GLib.GType

	static public New(method) : raw : System.IntPtr -> Pango.GlyphString

	static public New(method) : Void -> Pango.GlyphString

}