class haxe.lang.Runtime{
	static public undefined((default,never)) : Dynamic

	 = [Cast:Dynamic] [New:System.Object] System.Object

	static public closure(method) : obj : Dynamic -> hash : Int -> field : String -> Dynamic

	 = [Function:obj : Dynamic -> hash : Int -> field : String -> Dynamic]
		[Arg:Dynamic] [Local obj(1507):Dynamic]
		[Arg:Int] [Local hash(1508):Int]
		[Arg:String] [Local field(1509):String]
		[Block:Dynamic]
			[Return:Dynamic]
				[New:haxe.lang.Closure]
					haxe.lang.Closure
					[Local obj(1507):Dynamic]
					[Local field(1509):String]
					[Local hash(1508):Int]

	static public eq(method) : v1 : Dynamic -> v2 : Dynamic -> Bool

	 = [Function:v1 : Dynamic -> v2 : Dynamic -> Bool]
		[Arg:Dynamic] [Local v1(1510):Dynamic]
		[Arg:Dynamic] [Local v2(1511):Dynamic]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:objA : Dynamic -> objB : Dynamic -> Bool]
							[TypeExpr System.Object:Class<cs.system.Object>]
							[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
								System.Object
								ReferenceEquals
						[Local v1(1510):Dynamic]
						[Local v2(1511):Dynamic]
				[Then:Dynamic] [Return:Dynamic] [Const true:Bool]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Bool]
							[Field:objA : Dynamic -> objB : Dynamic -> Bool]
								[TypeExpr System.Object:Class<cs.system.Object>]
								[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
									System.Object
									ReferenceEquals
							[Local v1(1510):Dynamic]
							[Const null:Unknown<66>]
						||
						[Call:Bool]
							[Field:objA : Dynamic -> objB : Dynamic -> Bool]
								[TypeExpr System.Object:Class<cs.system.Object>]
								[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
									System.Object
									ReferenceEquals
							[Local v2(1511):Dynamic]
							[Const null:Unknown<65>]
				[Then:Dynamic] [Return:Dynamic] [Const false:Bool]
			[Var v1c(1517):System.IConvertible]
				[Cast:System.IConvertible]
					[Call:System.IConvertible]
						[Local __as__(1516):Dynamic -> Unknown<5>]
						[Local v1(1510):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local v1c(1517):System.IConvertible]
						!=
						[Const null:System.IConvertible]
				[Then:Unknown<70>] [Block:Unknown<70>]
					[Var v2c(1523):System.IConvertible]
						[Cast:System.IConvertible]
							[Call:System.IConvertible]
								[Local __as__(1522):Dynamic -> Unknown<5>]
								[Local v2(1511):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local v2c(1523):System.IConvertible]
								==
								[Const null:System.IConvertible]
						[Then:Dynamic] [Return:Dynamic] [Const false:Bool]
					[Var t1(1524):System.TypeCode]
						[Call:System.TypeCode]
							[Field:Void -> System.TypeCode]
								[Local v1c(1517):System.IConvertible]
								[FInstance:Void -> System.TypeCode]
									System.IConvertible
									GetTypeCode
					[Var t2(1525):System.TypeCode]
						[Call:System.TypeCode]
							[Field:Void -> System.TypeCode]
								[Local v2c(1523):System.IConvertible]
								[FInstance:Void -> System.TypeCode]
									System.IConvertible
									GetTypeCode
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local t1(1524):System.TypeCode]
								==
								[Local t2(1525):System.TypeCode]
						[Then:Dynamic] [Return:Dynamic]
							[Call:Bool]
								[Field:objA : Dynamic -> objB : Dynamic -> Bool]
									[TypeExpr System.Object:Class<cs.system.Object>]
									[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
										System.Object
										Equals
								[Local v1c(1517):System.IConvertible]
								[Local v2c(1523):System.IConvertible]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local t1(1524):System.TypeCode]
									==
									[Field:System.TypeCode]
										[TypeExpr System.TypeCode:Enum<cs.system.TypeCode>]
										[FEnum:System.TypeCode]
											System.TypeCode
											String
								||
								[Binop:Bool]
									[Local t2(1525):System.TypeCode]
									==
									[Field:System.TypeCode]
										[TypeExpr System.TypeCode:Enum<cs.system.TypeCode>]
										[FEnum:System.TypeCode]
											System.TypeCode
											String
						[Then:Dynamic] [Return:Dynamic] [Const false:Bool]
					[Meta:Unknown<70>]
						:ast('???')
						[Switch:Unknown<70>]
							[Parenthesis:Int]
								[Meta:Int]
									:exhaustive
									[Call:Int]
										[Field:System.TypeCode -> Int]
											[TypeExpr Type:Class<Type>]
											[FStatic:System.TypeCode -> Int]
												Type
												enumIndex
										[Local t1(1524):System.TypeCode]
							[Case:Dynamic]
								[Const 15:Int]
								[Return:Dynamic]
									[Binop:Bool]
										[Call:System.Decimal]
											[Field:provider : System.IFormatProvider -> System.Decimal]
												[Local v1c(1517):System.IConvertible]
												[FInstance:provider : System.IFormatProvider -> System.Decimal]
													System.IConvertible
													ToDecimal
											[Const null:System.IFormatProvider]
										==
										[Call:System.Decimal]
											[Field:provider : System.IFormatProvider -> System.Decimal]
												[Local v2c(1523):System.IConvertible]
												[FInstance:provider : System.IFormatProvider -> System.Decimal]
													System.IConvertible
													ToDecimal
											[Const null:System.IFormatProvider]
							[Case:Unknown<67>]
								[Const 12:Int]
								[Const 11:Int]
								[Const 16:Int]
								[Switch:Unknown<67>]
									[Parenthesis:Int]
										[Meta:Int]
											:exhaustive
											[Call:Int]
												[Field:System.TypeCode -> Int]
													[TypeExpr Type:Class<Type>]
													[FStatic:System.TypeCode -> Int]
														Type
														enumIndex
												[Local t2(1525):System.TypeCode]
									[Case:Dynamic]
										[Const 15:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
												==
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
									[Case:Dynamic]
										[Const 12:Int]
										[Const 11:Int]
										[Const 16:Int]
										[Const 14:Int]
										[Const 13:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
												==
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
									[Default:Dynamic]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
												==
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
							[Case:Unknown<68>]
								[Const 14:Int]
								[Const 13:Int]
								[Switch:Unknown<68>]
									[Parenthesis:Int]
										[Meta:Int]
											:exhaustive
											[Call:Int]
												[Field:System.TypeCode -> Int]
													[TypeExpr Type:Class<Type>]
													[FStatic:System.TypeCode -> Int]
														Type
														enumIndex
												[Local t2(1525):System.TypeCode]
									[Case:Dynamic]
										[Const 15:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
												==
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
									[Case:Dynamic]
										[Const 12:Int]
										[Const 11:Int]
										[Const 16:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
												==
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
									[Case:Dynamic]
										[Const 14:Int]
										[Const 13:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
												==
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
									[Default:Dynamic]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
												==
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
							[Default:Unknown<69>]
								[Switch:Unknown<69>]
									[Parenthesis:Int]
										[Meta:Int]
											:exhaustive
											[Call:Int]
												[Field:System.TypeCode -> Int]
													[TypeExpr Type:Class<Type>]
													[FStatic:System.TypeCode -> Int]
														Type
														enumIndex
												[Local t2(1525):System.TypeCode]
									[Case:Dynamic]
										[Const 15:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
												==
												[Call:System.Decimal]
													[Field:provider : System.IFormatProvider -> System.Decimal]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> System.Decimal]
															System.IConvertible
															ToDecimal
													[Const null:System.IFormatProvider]
									[Case:Dynamic]
										[Const 12:Int]
										[Const 11:Int]
										[Const 16:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
												==
												[Call:cs.types.UInt64]
													[Field:provider : System.IFormatProvider -> cs.types.UInt64]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> cs.types.UInt64]
															System.IConvertible
															ToUInt64
													[Const null:System.IFormatProvider]
									[Case:Dynamic]
										[Const 14:Int]
										[Const 13:Int]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
												==
												[Call:Float]
													[Field:provider : System.IFormatProvider -> Float]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Float]
															System.IConvertible
															ToDouble
													[Const null:System.IFormatProvider]
									[Default:Dynamic]
										[Return:Dynamic]
											[Binop:Bool]
												[Call:Int]
													[Field:provider : System.IFormatProvider -> Int]
														[Local v1c(1517):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Int]
															System.IConvertible
															ToInt32
													[Const null:System.IFormatProvider]
												==
												[Call:Int]
													[Field:provider : System.IFormatProvider -> Int]
														[Local v2c(1523):System.IConvertible]
														[FInstance:provider : System.IFormatProvider -> Int]
															System.IConvertible
															ToInt32
													[Const null:System.IFormatProvider]
			[Var v1v(1531):System.ValueType]
				[Cast:System.ValueType]
					[Call:System.ValueType]
						[Local __as__(1530):Dynamic -> Unknown<5>]
						[Local v1(1510):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local v1v(1531):System.ValueType]
						!=
						[Const null:System.ValueType]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Dynamic]
						[Field:Dynamic]
							[Local v1(1510):Dynamic]
							[FDynamic:Dynamic] Equals
						[Local v2(1511):Dynamic]
				[Else:Void] [Block:Void]
					[Var v1t(1537):System.Type]
						[Cast:System.Type]
							[Call:System.Type]
								[Local __as__(1536):Dynamic -> Unknown<5>]
								[Local v1(1510):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local v1t(1537):System.Type]
								!=
								[Const null:System.Type]
						[Then:Dynamic] [Block:Dynamic]
							[Var v2t(1543):System.Type]
								[Cast:System.Type]
									[Call:System.Type]
										[Local __as__(1542):Dynamic -> Unknown<5>]
										[Local v2(1511):Dynamic]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Local v2t(1543):System.Type]
										!=
										[Const null:System.Type]
								[Then:Dynamic] [Return:Dynamic]
									[Call:Bool]
										[Field:t1 : System.Type -> t2 : System.Type -> Bool]
											[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
											[FStatic:t1 : System.Type -> t2 : System.Type -> Bool]
												haxe.lang.Runtime
												typeEq
										[Local v1t(1537):System.Type]
										[Local v2t(1543):System.Type]
							[Return:Dynamic] [Const false:Bool]
			[Return:Dynamic] [Const false:Bool]

	static public refEq(method) : v1 : { } -> v2 : { } -> Bool

	 = [Function:v1 : { } -> v2 : { } -> Bool]
		[Arg:{ }] [Local v1(1559):{ }]
		[Arg:{ }] [Local v2(1560):{ }]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:v : Dynamic -> t : Dynamic -> Bool]
							[TypeExpr Std:Class<Std>]
							[FStatic:v : Dynamic -> t : Dynamic -> Bool]
								Std
								is
						[Local v1(1559):{ }]
						[TypeExpr System.Type:Class<cs.system.Type>]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Bool]
						[Field:t1 : System.Type -> t2 : System.Type -> Bool]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:t1 : System.Type -> t2 : System.Type -> Bool]
								haxe.lang.Runtime
								typeEq
						[Cast:System.Type]
							[Call:System.Type]
								[Local __as__(1565):Dynamic -> Unknown<5>]
								[Local v1(1559):{ }]
						[Cast:System.Type]
							[Call:System.Type]
								[Local __as__(1570):Dynamic -> Unknown<5>]
								[Local v2(1560):{ }]
			[Return:Dynamic]
				[Call:Bool]
					[Field:objA : Dynamic -> objB : Dynamic -> Bool]
						[TypeExpr System.Object:Class<cs.system.Object>]
						[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
							System.Object
							ReferenceEquals
					[Local v1(1559):{ }]
					[Local v2(1560):{ }]

	static public toDouble(method) : obj : Dynamic -> Float

	 = [Function:obj : Dynamic -> Float]
		[Arg:Dynamic] [Local obj(1571):Dynamic]
		[Block:Dynamic]
			[If:Float]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(1571):Dynamic]
						==
						[Const null:Unknown<71>]
				[Then:Dynamic] [Return:Dynamic] [Const .0:Float]
				[Else:Float] [If:Float]
					[Parenthesis:Bool]
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local obj(1571):Dynamic]
							[TypeExpr Float:Abstract<Float>]
					[Then:Dynamic] [Return:Dynamic] [Cast:Float] [Local obj(1571):Dynamic]
					[Else:Dynamic] [Return:Dynamic]
						[Call:Float]
							[Field:provider : System.IFormatProvider -> Float]
								[Cast:System.IConvertible]
									[Call:System.IConvertible]
										[Local __as__(1576):Dynamic -> Unknown<5>]
										[Local obj(1571):Dynamic]
								[FInstance:provider : System.IFormatProvider -> Float]
									System.IConvertible
									ToDouble
							[Const null:System.IFormatProvider]

	static public toInt(method) : obj : Dynamic -> Int

	 = [Function:obj : Dynamic -> Int]
		[Arg:Dynamic] [Local obj(825):Dynamic]
		[Block:Dynamic]
			[If:Int]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(825):Dynamic]
						==
						[Const null:Unknown<72>]
				[Then:Dynamic] [Return:Dynamic] [Const 0:Int]
				[Else:Int] [If:Int]
					[Parenthesis:Bool]
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local obj(825):Dynamic]
							[TypeExpr Int:Abstract<Int>]
					[Then:Dynamic] [Return:Dynamic] [Cast:Int] [Local obj(825):Dynamic]
					[Else:Dynamic] [Return:Dynamic]
						[Call:Int]
							[Field:provider : System.IFormatProvider -> Int]
								[Cast:System.IConvertible]
									[Call:System.IConvertible]
										[Local __as__(830):Dynamic -> Unknown<5>]
										[Local obj(825):Dynamic]
								[FInstance:provider : System.IFormatProvider -> Int]
									System.IConvertible
									ToInt32
							[Const null:System.IFormatProvider]

	static public isInt(method) : obj : Dynamic -> Bool

	 = [Function:obj : Dynamic -> Bool]
		[Arg:Dynamic] [Local obj(1577):Dynamic]
		[Block:Dynamic]
			[Var cv1(1583):System.IConvertible]
				[Cast:System.IConvertible]
					[Call:System.IConvertible]
						[Local __as__(1582):Dynamic -> Unknown<5>]
						[Local obj(1577):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local cv1(1583):System.IConvertible]
						!=
						[Const null:System.IConvertible]
				[Then:Unknown<73>] [Block:Unknown<73>]
					[Var _g(1584):System.TypeCode]
						[Call:System.TypeCode]
							[Field:Void -> System.TypeCode]
								[Local cv1(1583):System.IConvertible]
								[FInstance:Void -> System.TypeCode]
									System.IConvertible
									GetTypeCode
					[Switch:Unknown<73>]
						[Parenthesis:Int]
							[Meta:Int]
								:exhaustive
								[Call:Int]
									[Field:System.TypeCode -> Int]
										[TypeExpr Type:Class<Type>]
										[FStatic:System.TypeCode -> Int]
											Type
											enumIndex
									[Local _g(1584):System.TypeCode]
						[Case:Dynamic]
							[Const 14:Int]
							[Block:Dynamic]
								[Var d(1586):Float] [Cast:Float] [Local obj(1577):Dynamic]
								[Return:Dynamic]
									[Binop:Bool]
										[Binop:Bool]
											[Binop:Bool]
												[Local d(1586):Float]
												>=
												[Field:Int]
													[TypeExpr System.Int32:Class<cs.system.Int32>]
													[FStatic:Int]
														System.Int32
														MinValue
											&&
											[Binop:Bool]
												[Local d(1586):Float]
												<=
												[Field:Int]
													[TypeExpr System.Int32:Class<cs.system.Int32>]
													[FStatic:Int]
														System.Int32
														MaxValue
										&&
										[Binop:Bool]
											[Local d(1586):Float]
											==
											[Cast:Int]
												[Local d(1586):Float]
												[TypeExpr Int:Int]
						[Case:Dynamic]
							[Const 10:Int]
							[Const 9:Int]
							[Return:Dynamic] [Const true:Bool]
						[Default:Dynamic] [Return:Dynamic] [Const false:Bool]
			[Return:Dynamic] [Const false:Bool]

	static public isUInt(method) : obj : Dynamic -> Bool

	 = [Function:obj : Dynamic -> Bool]
		[Arg:Dynamic] [Local obj(1587):Dynamic]
		[Block:Dynamic]
			[Var cv1(1593):System.IConvertible]
				[Cast:System.IConvertible]
					[Call:System.IConvertible]
						[Local __as__(1592):Dynamic -> Unknown<5>]
						[Local obj(1587):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local cv1(1593):System.IConvertible]
						!=
						[Const null:System.IConvertible]
				[Then:Unknown<74>] [Block:Unknown<74>]
					[Var _g(1594):System.TypeCode]
						[Call:System.TypeCode]
							[Field:Void -> System.TypeCode]
								[Local cv1(1593):System.IConvertible]
								[FInstance:Void -> System.TypeCode]
									System.IConvertible
									GetTypeCode
					[Switch:Unknown<74>]
						[Parenthesis:Int]
							[Meta:Int]
								:exhaustive
								[Call:Int]
									[Field:System.TypeCode -> Int]
										[TypeExpr Type:Class<Type>]
										[FStatic:System.TypeCode -> Int]
											Type
											enumIndex
									[Local _g(1594):System.TypeCode]
						[Case:Dynamic]
							[Const 14:Int]
							[Block:Dynamic]
								[Var d(1598):Float] [Cast:Float] [Local obj(1587):Dynamic]
								[Return:Dynamic]
									[Binop:Bool]
										[Binop:Bool]
											[Cast:Bool]
												[Binop:Bool]
													[Local d(1598):Float]
													>=
													[Field:UInt]
														[TypeExpr System.UInt32:Class<cs.system.UInt32>]
														[FStatic:UInt]
															System.UInt32
															MinValue
											&&
											[Cast:Bool]
												[Binop:Bool]
													[Local d(1598):Float]
													<=
													[Field:UInt]
														[TypeExpr System.UInt32:Class<cs.system.UInt32>]
														[FStatic:UInt]
															System.UInt32
															MaxValue
										&&
										[Block:Bool]
											[Var _g1(1599):Float] [Local d(1598):Float]
											[Var _g2(1600):UInt]
											[Binop:UInt]
												[Local _g2(1600):UInt]
												=
												[Cast:UInt]
													[Local d(1598):Float]
													[TypeExpr UInt:UInt]
											[Cast:Bool]
												[Binop:Bool]
													[Local _g2(1600):UInt]
													==
													[Local _g1(1599):Float]
						[Case:Dynamic]
							[Const 10:Int]
							[Return:Dynamic] [Const true:Bool]
						[Default:Dynamic] [Return:Dynamic] [Const false:Bool]
			[Return:Dynamic] [Const false:Bool]

	static public compare(method) : v1 : Dynamic -> v2 : Dynamic -> Int

	 = [Function:v1 : Dynamic -> v2 : Dynamic -> Int]
		[Arg:Dynamic] [Local v1(1601):Dynamic]
		[Arg:Dynamic] [Local v2(1602):Dynamic]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:objA : Dynamic -> objB : Dynamic -> Bool]
							[TypeExpr System.Object:Class<cs.system.Object>]
							[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
								System.Object
								ReferenceEquals
						[Local v1(1601):Dynamic]
						[Local v2(1602):Dynamic]
				[Then:Dynamic] [Return:Dynamic] [Const 0:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:objA : Dynamic -> objB : Dynamic -> Bool]
							[TypeExpr System.Object:Class<cs.system.Object>]
							[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
								System.Object
								ReferenceEquals
						[Local v1(1601):Dynamic]
						[Const null:Unknown<75>]
				[Then:Dynamic] [Return:Dynamic] [Const -1:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:objA : Dynamic -> objB : Dynamic -> Bool]
							[TypeExpr System.Object:Class<cs.system.Object>]
							[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
								System.Object
								ReferenceEquals
						[Local v2(1602):Dynamic]
						[Const null:Unknown<76>]
				[Then:Dynamic] [Return:Dynamic] [Const 1:Int]
			[Var cv1(1608):System.IConvertible]
				[Cast:System.IConvertible]
					[Call:System.IConvertible]
						[Local __as__(1607):Dynamic -> Unknown<5>]
						[Local v1(1601):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local cv1(1608):System.IConvertible]
						!=
						[Const null:System.IConvertible]
				[Then:Unknown<79>] [Block:Unknown<79>]
					[Var cv2(1614):System.IConvertible]
						[Cast:System.IConvertible]
							[Call:System.IConvertible]
								[Local __as__(1613):Dynamic -> Unknown<5>]
								[Local v2(1602):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local cv2(1614):System.IConvertible]
								==
								[Const null:System.IConvertible]
						[Then:Unknown<77>] [Throw:Unknown<77>]
							[New:System.ArgumentException]
								System.ArgumentException
								[Binop:String]
									[Binop:String]
										[Binop:String]
											[Const "Cannot compare ":String]
											+
											[Call:String]
												[Field:Void -> String]
													[Call:System.Type]
														[Field:obj : Dynamic -> System.Type]
															[TypeExpr cs.Lib:Class<cs.Lib>]
															[FStatic:obj : Dynamic -> System.Type]
																cs.Lib
																getNativeType
														[Local v1(1601):Dynamic]
													[FInstance:Void -> String]
														System.Type
														ToString
										+
										[Const " and ":String]
									+
									[Call:String]
										[Field:Void -> String]
											[Call:System.Type]
												[Field:obj : Dynamic -> System.Type]
													[TypeExpr cs.Lib:Class<cs.Lib>]
													[FStatic:obj : Dynamic -> System.Type]
														cs.Lib
														getNativeType
												[Local v2(1602):Dynamic]
											[FInstance:Void -> String]
												System.Type
												ToString
					[Block:Unknown<79>]
						[Var _g(1615):System.TypeCode]
							[Call:System.TypeCode]
								[Field:Void -> System.TypeCode]
									[Local cv1(1608):System.IConvertible]
									[FInstance:Void -> System.TypeCode]
										System.IConvertible
										GetTypeCode
						[Switch:Unknown<79>]
							[Parenthesis:Int]
								[Meta:Int]
									:exhaustive
									[Call:Int]
										[Field:System.TypeCode -> Int]
											[TypeExpr Type:Class<Type>]
											[FStatic:System.TypeCode -> Int]
												Type
												enumIndex
										[Local _g(1615):System.TypeCode]
							[Case:Dynamic]
								[Const 17:Int]
								[Block:Dynamic]
									[If:Void]
										[Parenthesis:Bool]
											[Binop:Bool]
												[Call:System.TypeCode]
													[Field:Void -> System.TypeCode]
														[Local cv2(1614):System.IConvertible]
														[FInstance:Void -> System.TypeCode]
															System.IConvertible
															GetTypeCode
												!=
												[Field:System.TypeCode]
													[TypeExpr System.TypeCode:Enum<cs.system.TypeCode>]
													[FEnum:System.TypeCode]
														System.TypeCode
														String
										[Then:Unknown<78>] [Throw:Unknown<78>]
											[New:System.ArgumentException]
												System.ArgumentException
												[Binop:String]
													[Binop:String]
														[Binop:String]
															[Const "Cannot compare ":String]
															+
															[Call:String]
																[Field:Void -> String]
																	[Call:System.Type]
																		[Field:obj : Dynamic -> System.Type]
																			[TypeExpr cs.Lib:Class<cs.Lib>]
																			[FStatic:obj : Dynamic -> System.Type]
																				cs.Lib
																				getNativeType
																		[Local v1(1601):Dynamic]
																	[FInstance:Void -> String]
																		System.Type
																		ToString
														+
														[Const " and ":String]
													+
													[Call:String]
														[Field:Void -> String]
															[Call:System.Type]
																[Field:obj : Dynamic -> System.Type]
																	[TypeExpr cs.Lib:Class<cs.Lib>]
																	[FStatic:obj : Dynamic -> System.Type]
																		cs.Lib
																		getNativeType
																[Local v2(1602):Dynamic]
															[FInstance:Void -> String]
																System.Type
																ToString
									[Var s1(1632):String]
										[Cast:String]
											[Call:String]
												[Local __as__(1620):Dynamic -> Unknown<5>]
												[Local v1(1601):Dynamic]
									[Var s2(1633):String]
										[Cast:String]
											[Call:String]
												[Local __as__(1626):Dynamic -> Unknown<5>]
												[Local v2(1602):Dynamic]
									[Return:Dynamic]
										[Call:Int]
											[Field:s1 : String -> s2 : String -> kind : System.StringComparison -> Int]
												[TypeExpr String:Class<String>]
												[FStatic:s1 : String -> s2 : String -> kind : System.StringComparison -> Int]
													String
													Compare
											[Local s1(1632):String]
											[Local s2(1633):String]
											[Field:System.StringComparison]
												[TypeExpr System.StringComparison:Enum<cs.system.StringComparison>]
												[FEnum:System.StringComparison]
													System.StringComparison
													Ordinal
							[Case:Dynamic]
								[Const 14:Int]
								[Block:Dynamic]
									[Var d1(1634):Float] [Cast:Float] [Local v1(1601):Dynamic]
									[Var d2(1635):Float]
										[Call:Float]
											[Field:provider : System.IFormatProvider -> Float]
												[Local cv2(1614):System.IConvertible]
												[FInstance:provider : System.IFormatProvider -> Float]
													System.IConvertible
													ToDouble
											[Const null:System.IFormatProvider]
									[If:Int]
										[Parenthesis:Bool]
											[Binop:Bool]
												[Local d1(1634):Float]
												<
												[Local d2(1635):Float]
										[Then:Dynamic] [Return:Dynamic] [Const -1:Int]
										[Else:Int] [If:Int]
											[Parenthesis:Bool]
												[Binop:Bool]
													[Local d1(1634):Float]
													>
													[Local d2(1635):Float]
											[Then:Dynamic] [Return:Dynamic] [Const 1:Int]
											[Else:Dynamic] [Return:Dynamic] [Const 0:Int]
							[Default:Dynamic]
								[Block:Dynamic]
									[Var d1d(1630):Float]
										[Call:Float]
											[Field:provider : System.IFormatProvider -> Float]
												[Local cv1(1608):System.IConvertible]
												[FInstance:provider : System.IFormatProvider -> Float]
													System.IConvertible
													ToDouble
											[Const null:System.IFormatProvider]
									[Var d2d(1631):Float]
										[Call:Float]
											[Field:provider : System.IFormatProvider -> Float]
												[Local cv2(1614):System.IConvertible]
												[FInstance:provider : System.IFormatProvider -> Float]
													System.IConvertible
													ToDouble
											[Const null:System.IFormatProvider]
									[If:Int]
										[Parenthesis:Bool]
											[Binop:Bool]
												[Local d1d(1630):Float]
												<
												[Local d2d(1631):Float]
										[Then:Dynamic] [Return:Dynamic] [Const -1:Int]
										[Else:Int] [If:Int]
											[Parenthesis:Bool]
												[Binop:Bool]
													[Local d1d(1630):Float]
													>
													[Local d2d(1631):Float]
											[Then:Dynamic] [Return:Dynamic] [Const 1:Int]
											[Else:Dynamic] [Return:Dynamic] [Const 0:Int]
			[Var c1(1641):System.IComparable]
				[Cast:System.IComparable]
					[Call:System.IComparable]
						[Local __as__(1640):Dynamic -> Unknown<5>]
						[Local v1(1601):Dynamic]
			[Var c2(1647):System.IComparable]
				[Cast:System.IComparable]
					[Call:System.IComparable]
						[Local __as__(1646):Dynamic -> Unknown<5>]
						[Local v2(1602):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local c1(1641):System.IComparable]
							==
							[Const null:System.IComparable]
						||
						[Binop:Bool]
							[Local c2(1647):System.IComparable]
							==
							[Const null:System.IComparable]
				[Then:Unknown<80>] [Throw:Unknown<80>]
					[New:System.ArgumentException]
						System.ArgumentException
						[Binop:String]
							[Binop:String]
								[Binop:String]
									[Const "Cannot compare ":String]
									+
									[Call:String]
										[Field:Void -> String]
											[Call:System.Type]
												[Field:obj : Dynamic -> System.Type]
													[TypeExpr cs.Lib:Class<cs.Lib>]
													[FStatic:obj : Dynamic -> System.Type]
														cs.Lib
														getNativeType
												[Local v1(1601):Dynamic]
											[FInstance:Void -> String]
												System.Type
												ToString
								+
								[Const " and ":String]
							+
							[Call:String]
								[Field:Void -> String]
									[Call:System.Type]
										[Field:obj : Dynamic -> System.Type]
											[TypeExpr cs.Lib:Class<cs.Lib>]
											[FStatic:obj : Dynamic -> System.Type]
												cs.Lib
												getNativeType
										[Local v2(1602):Dynamic]
									[FInstance:Void -> String]
										System.Type
										ToString
			[Return:Dynamic]
				[Call:Int]
					[Field:obj : Dynamic -> Int]
						[Local c1(1641):System.IComparable]
						[FInstance:obj : Dynamic -> Int]
							System.IComparable
							CompareTo
					[Local c2(1647):System.IComparable]

	static public plus(method) : v1 : Dynamic -> v2 : Dynamic -> Dynamic

	 = [Function:v1 : Dynamic -> v2 : Dynamic -> Dynamic]
		[Arg:Dynamic] [Local v1(1648):Dynamic]
		[Arg:Dynamic] [Local v2(1649):Dynamic]
		[Block:Unknown<86>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local v1(1648):Dynamic]
							[TypeExpr String:Class<String>]
						||
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local v2(1649):Dynamic]
							[TypeExpr String:Class<String>]
				[Then:Dynamic] [Return:Dynamic]
					[Binop:String]
						[Call:String]
							[Field:s : Dynamic -> String]
								[TypeExpr Std:Class<Std>]
								[FStatic:s : Dynamic -> String]
									Std
									string
							[Local v1(1648):Dynamic]
						+
						[Call:String]
							[Field:s : Dynamic -> String]
								[TypeExpr Std:Class<Std>]
								[FStatic:s : Dynamic -> String]
									Std
									string
							[Local v2(1649):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local v1(1648):Dynamic]
						==
						[Const null:Unknown<84>]
				[Then:Dynamic] [Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local v2(1649):Dynamic]
								==
								[Const null:Unknown<83>]
						[Then:Dynamic] [Return:Dynamic] [Const null:Unknown<82>]
					[Binop:Dynamic]
						[Local v1(1648):Dynamic]
						=
						[Const 0:Int]
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local v2(1649):Dynamic]
							==
							[Const null:Unknown<81>]
					[Then:Dynamic] [Binop:Dynamic]
						[Local v2(1649):Dynamic]
						=
						[Const 0:Int]
			[Var cv1(1655):System.IConvertible]
				[Cast:System.IConvertible]
					[Call:System.IConvertible]
						[Local __as__(1654):Dynamic -> Unknown<5>]
						[Local v1(1648):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local cv1(1655):System.IConvertible]
						!=
						[Const null:System.IConvertible]
				[Then:Dynamic] [Block:Dynamic]
					[Var cv2(1661):System.IConvertible]
						[Cast:System.IConvertible]
							[Call:System.IConvertible]
								[Local __as__(1660):Dynamic -> Unknown<5>]
								[Local v2(1649):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local cv2(1661):System.IConvertible]
								==
								[Const null:System.IConvertible]
						[Then:Unknown<85>] [Throw:Unknown<85>]
							[New:System.ArgumentException]
								System.ArgumentException
								[Binop:String]
									[Binop:String]
										[Binop:String]
											[Const "Cannot dynamically add ":String]
											+
											[Call:String]
												[Field:Void -> String]
													[Call:System.Type]
														[Field:obj : Dynamic -> System.Type]
															[TypeExpr cs.Lib:Class<cs.Lib>]
															[FStatic:obj : Dynamic -> System.Type]
																cs.Lib
																getNativeType
														[Local v1(1648):Dynamic]
													[FInstance:Void -> String]
														System.Type
														ToString
										+
										[Const " and ":String]
									+
									[Call:String]
										[Field:Void -> String]
											[Call:System.Type]
												[Field:obj : Dynamic -> System.Type]
													[TypeExpr cs.Lib:Class<cs.Lib>]
													[FStatic:obj : Dynamic -> System.Type]
														cs.Lib
														getNativeType
												[Local v2(1649):Dynamic]
											[FInstance:Void -> String]
												System.Type
												ToString
					[Return:Dynamic]
						[Binop:Float]
							[Call:Float]
								[Field:provider : System.IFormatProvider -> Float]
									[Local cv1(1655):System.IConvertible]
									[FInstance:provider : System.IFormatProvider -> Float]
										System.IConvertible
										ToDouble
								[Const null:System.IFormatProvider]
							+
							[Call:Float]
								[Field:provider : System.IFormatProvider -> Float]
									[Local cv2(1661):System.IConvertible]
									[FInstance:provider : System.IFormatProvider -> Float]
										System.IConvertible
										ToDouble
								[Const null:System.IFormatProvider]
			[Throw:Unknown<86>]
				[New:System.ArgumentException]
					System.ArgumentException
					[Binop:String]
						[Binop:String]
							[Binop:String]
								[Const "Cannot dynamically add ":String]
								+
								[Call:String]
									[Field:s : Dynamic -> String]
										[TypeExpr Std:Class<Std>]
										[FStatic:s : Dynamic -> String]
											Std
											string
									[Local v1(1648):Dynamic]
							+
							[Const " and ":String]
						+
						[Call:String]
							[Field:s : Dynamic -> String]
								[TypeExpr Std:Class<Std>]
								[FStatic:s : Dynamic -> String]
									Std
									string
							[Local v2(1649):Dynamic]

	static public slowGetField(method) : obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
		[Arg:Dynamic] [Local obj(717):Dynamic]
		[Arg:String] [Local field(718):String]
		[Arg:Bool] [Local throwErrors(719):Bool]
		[Block:Void]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(717):Dynamic]
						==
						[Const null:Unknown<89>]
				[Then:Void] [Block:Void]
					[If:Void]
						[Parenthesis:Bool] [Local throwErrors(719):Bool]
						[Then:Unknown<88>] [Throw:Unknown<88>]
							[New:System.NullReferenceException]
								System.NullReferenceException
								[Binop:String]
									[Binop:String]
										[Const "Cannot access field '":String]
										+
										[Local field(718):String]
									+
									[Const "' of null.":String]
						[Else:Dynamic] [Return:Dynamic] [Const null:Unknown<87>]
			[Var t(728):System.Type]
				[Cast:System.Type]
					[Call:System.Type]
						[Local __as__(727):Dynamic -> Unknown<5>]
						[Local obj(717):Dynamic]
			[Var bf(777):cs.Flags<System.Reflection.BindingFlags>]
			[If:cs.Flags<System.Reflection.BindingFlags>]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t(728):System.Type]
						==
						[Const null:System.Type]
				[Then:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[Var s(734):String]
						[Cast:String]
							[Call:String]
								[Local __as__(733):Dynamic -> Unknown<5>]
								[Local obj(717):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local s(734):String]
								!=
								[Const null:String]
						[Then:Dynamic] [Return:Dynamic]
							[Call:Dynamic]
								[Field:str : String -> f : String -> throwErrors : Bool -> Dynamic]
									[TypeExpr haxe.lang.StringRefl:Class<cs.internal.StringRefl>]
									[FStatic:str : String -> f : String -> throwErrors : Bool -> Dynamic]
										haxe.lang.StringRefl
										handleGetField
								[Local s(734):String]
								[Local field(718):String]
								[Local throwErrors(719):Bool]
					[Binop:System.Type]
						[Local t(728):System.Type]
						=
						[Call:Dynamic]
							[Field:Dynamic]
								[Local obj(717):Dynamic]
								[FDynamic:Dynamic] GetType
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Cast:System.Reflection.BindingFlags]
																[Binop:System.Reflection.BindingFlags]
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Cast:System.Reflection.BindingFlags]
																				[Cast:cs.Flags<System.Reflection.BindingFlags>]
																					[Cast:System.Reflection.BindingFlags]
																						[Field:System.Reflection.BindingFlags]
																							[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																							[FEnum:System.Reflection.BindingFlags]
																								System.Reflection.BindingFlags
																								Instance
																	|
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Field:System.Reflection.BindingFlags]
																				[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																				[FEnum:System.Reflection.BindingFlags]
																					System.Reflection.BindingFlags
																					Public
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														FlattenHierarchy
				[Else:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local t(728):System.Type]
									==
									[Cast:System.Type] [TypeExpr String:Class<String>]
								&&
								[Binop:Bool]
									[Local field(718):String]
									==
									[Const "fromCharCode":String]
						[Then:Dynamic] [Return:Dynamic]
							[New:haxe.lang.Closure]
								haxe.lang.Closure
								[TypeExpr haxe.lang.StringExt:Class<cs.internal.StringExt>]
								[Local field(718):String]
								[Const 0:Int]
					[Binop:Dynamic]
						[Local obj(717):Dynamic]
						=
						[Const null:Unknown<90>]
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Field:System.Reflection.BindingFlags]
																[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																[FEnum:System.Reflection.BindingFlags]
																	System.Reflection.BindingFlags
																	Static
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														Public
			[Var f(778):System.Reflection.FieldInfo]
				[Call:System.Reflection.FieldInfo]
					[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo]
						[Local t(728):System.Type]
						[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo]
							System.Type
							GetField
					[Local field(718):String]
					[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local f(778):System.Reflection.FieldInfo]
						!=
						[Const null:System.Reflection.FieldInfo]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Dynamic]
						[Field:dyn : Dynamic -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:dyn : Dynamic -> Dynamic]
								haxe.lang.Runtime
								unbox
						[Call:Dynamic]
							[Field:obj : Dynamic -> Dynamic]
								[Local f(778):System.Reflection.FieldInfo]
								[FInstance:obj : Dynamic -> Dynamic]
									System.Reflection.FieldInfo
									GetValue
							[Local obj(717):Dynamic]
				[Else:Dynamic] [Block:Dynamic]
					[Var prop(780):System.Reflection.PropertyInfo]
						[Call:System.Reflection.PropertyInfo]
							[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.PropertyInfo]
								[Local t(728):System.Type]
								[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.PropertyInfo]
									System.Type
									GetProperty
							[Local field(718):String]
							[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local prop(780):System.Reflection.PropertyInfo]
								==
								[Const null:System.Reflection.PropertyInfo]
						[Then:Void] [Block:Void]
							[Var m(781):cs.NativeArray<System.Reflection.MemberInfo>]
								[Call:cs.NativeArray<System.Reflection.MemberInfo>]
									[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
										[Local t(728):System.Type]
										[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
											System.Type
											GetMember
									[Local field(718):String]
									[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Binop:Bool]
											[Call:Int]
												[Field:Void -> Int]
													[Local m(781):cs.NativeArray<System.Reflection.MemberInfo>]
													[FInstance:Void -> Int]
														System.Array
														get_Length
											==
											[Const 0:Int]
										&&
										[Parenthesis:Bool]
											[Binop:Bool]
												[Binop:Bool]
													[Local field(718):String]
													==
													[Const "__get":String]
												||
												[Binop:Bool]
													[Local field(718):String]
													==
													[Const "__set":String]
								[Then:cs.NativeArray<System.Reflection.MemberInfo>] [Binop:cs.NativeArray<System.Reflection.MemberInfo>]
									[Local m(781):cs.NativeArray<System.Reflection.MemberInfo>]
									=
									[Call:cs.NativeArray<System.Reflection.MemberInfo>]
										[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
											[Local t(728):System.Type]
											[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
												System.Type
												GetMember
										[If:String]
											[Parenthesis:Bool]
												[Binop:Bool]
													[Local field(718):String]
													==
													[Const "__get":String]
											[Then:String] [Const "get_Item":String]
											[Else:String] [Const "set_Item":String]
										[Local bf(777):cs.Flags<System.Reflection.BindingFlags>]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Call:Int]
											[Field:Void -> Int]
												[Local m(781):cs.NativeArray<System.Reflection.MemberInfo>]
												[FInstance:Void -> Int]
													System.Array
													get_Length
										>
										[Const 0:Int]
								[Then:Dynamic] [Return:Dynamic]
									[New:haxe.lang.Closure]
										haxe.lang.Closure
										[If:Dynamic]
											[Parenthesis:Bool]
												[Binop:Bool]
													[Local obj(717):Dynamic]
													!=
													[Const null:Unknown<94>]
											[Then:Dynamic] [Local obj(717):Dynamic]
											[Else:System.Type] [Local t(728):System.Type]
										[Local field(718):String]
										[Const 0:Int]
								[Else:Void] [Block:Void]
									[If:Void]
										[Parenthesis:Bool]
											[Call:Bool]
												[Field:Void -> Bool]
													[Local t(728):System.Type]
													[FInstance:Void -> Bool]
														System.Type
														get_IsCOMObject
										[Then:Void] [Try:Void]
											[Block:Dynamic]
												[Return:Dynamic]
													[Call:Dynamic]
														[Field:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
															[Local t(728):System.Type]
															[FInstance:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
																System.Type
																InvokeMember
														[Local field(718):String]
														[Field:System.Reflection.BindingFlags]
															[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
															[FEnum:System.Reflection.BindingFlags]
																System.Reflection.BindingFlags
																GetProperty
														[Const null:System.Reflection.Binder]
														[Local obj(717):Dynamic]
														[New:cs.NativeArray<Unknown<91>>]
															cs.NativeArray<Unknown<91>>
															[Const 0:Int]
											Catch [Local e(784):System.Exception] [Block:Void]
									[If:Void]
										[Parenthesis:Bool] [Local throwErrors(719):Bool]
										[Then:Unknown<93>] [Throw:Unknown<93>]
											[Binop:String]
												[Binop:String]
													[Const "Cannot access field '":String]
													+
													[Local field(718):String]
												+
												[Const "'.":String]
										[Else:Dynamic] [Return:Dynamic] [Const null:Unknown<92>]
					[Return:Dynamic]
						[Call:Dynamic]
							[Field:dyn : Dynamic -> Dynamic]
								[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
								[FStatic:dyn : Dynamic -> Dynamic]
									haxe.lang.Runtime
									unbox
							[Call:Dynamic]
								[Field:obj : Dynamic -> index : cs.NativeArray<Dynamic> -> Dynamic]
									[Local prop(780):System.Reflection.PropertyInfo]
									[FInstance:obj : Dynamic -> index : cs.NativeArray<Dynamic> -> Dynamic]
										System.Reflection.PropertyInfo
										GetValue
								[Local obj(717):Dynamic]
								[Const null:cs.NativeArray<Dynamic>]

	static public slowHasField(method) : obj : Dynamic -> field : String -> Bool

	 = [Function:obj : Dynamic -> field : String -> Bool]
		[Arg:Dynamic] [Local obj(1051):Dynamic]
		[Arg:String] [Local field(1052):String]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(1051):Dynamic]
						==
						[Const null:Unknown<95>]
				[Then:Dynamic] [Return:Dynamic] [Const false:Bool]
			[Var t(1058):System.Type]
				[Cast:System.Type]
					[Call:System.Type]
						[Local __as__(1057):Dynamic -> Unknown<5>]
						[Local obj(1051):Dynamic]
			[Var bf(1086):cs.Flags<System.Reflection.BindingFlags>]
			[If:cs.Flags<System.Reflection.BindingFlags>]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t(1058):System.Type]
						==
						[Const null:System.Type]
				[Then:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[Var s(1064):String]
						[Cast:String]
							[Call:String]
								[Local __as__(1063):Dynamic -> Unknown<5>]
								[Local obj(1051):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local s(1064):String]
								!=
								[Const null:String]
						[Then:Dynamic] [Return:Dynamic]
							[Binop:Bool]
								[Call:Dynamic]
									[Field:str : String -> f : String -> throwErrors : Bool -> Dynamic]
										[TypeExpr haxe.lang.StringRefl:Class<cs.internal.StringRefl>]
										[FStatic:str : String -> f : String -> throwErrors : Bool -> Dynamic]
											haxe.lang.StringRefl
											handleGetField
									[Local s(1064):String]
									[Local field(1052):String]
									[Const false:Bool]
								!=
								[Const null:Unknown<97>]
					[Binop:System.Type]
						[Local t(1058):System.Type]
						=
						[Call:Dynamic]
							[Field:Dynamic]
								[Local obj(1051):Dynamic]
								[FDynamic:Dynamic] GetType
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(1086):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Cast:System.Reflection.BindingFlags]
																[Binop:System.Reflection.BindingFlags]
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Cast:System.Reflection.BindingFlags]
																				[Cast:cs.Flags<System.Reflection.BindingFlags>]
																					[Cast:System.Reflection.BindingFlags]
																						[Field:System.Reflection.BindingFlags]
																							[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																							[FEnum:System.Reflection.BindingFlags]
																								System.Reflection.BindingFlags
																								Instance
																	|
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Field:System.Reflection.BindingFlags]
																				[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																				[FEnum:System.Reflection.BindingFlags]
																					System.Reflection.BindingFlags
																					Public
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														FlattenHierarchy
				[Else:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local t(1058):System.Type]
								==
								[Cast:System.Type] [TypeExpr String:Class<String>]
						[Then:Dynamic] [Return:Dynamic]
							[Binop:Bool]
								[Local field(1052):String]
								==
								[Const "fromCharCode":String]
					[Binop:Dynamic]
						[Local obj(1051):Dynamic]
						=
						[Const null:Unknown<96>]
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(1086):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Field:System.Reflection.BindingFlags]
																[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																[FEnum:System.Reflection.BindingFlags]
																	System.Reflection.BindingFlags
																	Static
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														Public
			[Var mi(1087):cs.NativeArray<System.Reflection.MemberInfo>]
				[Call:cs.NativeArray<System.Reflection.MemberInfo>]
					[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
						[Local t(1058):System.Type]
						[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MemberInfo>]
							System.Type
							GetMember
					[Local field(1052):String]
					[Local bf(1086):cs.Flags<System.Reflection.BindingFlags>]
			[Return:Dynamic]
				[Binop:Bool]
					[Binop:Bool]
						[Local mi(1087):cs.NativeArray<System.Reflection.MemberInfo>]
						!=
						[Const null:cs.NativeArray<System.Reflection.MemberInfo>]
					&&
					[Binop:Bool]
						[Call:Int]
							[Field:Void -> Int]
								[Local mi(1087):cs.NativeArray<System.Reflection.MemberInfo>]
								[FInstance:Void -> Int]
									System.Array
									get_Length
						>
						[Const 0:Int]

	static public slowSetField(method) : obj : Dynamic -> field : String -> value : Dynamic -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
		[Arg:Dynamic] [Local obj(1662):Dynamic]
		[Arg:String] [Local field(1663):String]
		[Arg:Dynamic] [Local value(1664):Dynamic]
		[Block:Void]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(1662):Dynamic]
						==
						[Const null:Unknown<99>]
				[Then:Unknown<98>] [Throw:Unknown<98>]
					[New:System.NullReferenceException]
						System.NullReferenceException
						[Binop:String]
							[Binop:String]
								[Const "Cannot access field '":String]
								+
								[Local field(1663):String]
							+
							[Const "' of null.":String]
			[Var t(1670):System.Type]
				[Cast:System.Type]
					[Call:System.Type]
						[Local __as__(1669):Dynamic -> Unknown<5>]
						[Local obj(1662):Dynamic]
			[Var bf(1689):cs.Flags<System.Reflection.BindingFlags>]
			[If:cs.Flags<System.Reflection.BindingFlags>]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t(1670):System.Type]
						==
						[Const null:System.Type]
				[Then:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[Binop:System.Type]
						[Local t(1670):System.Type]
						=
						[Call:Dynamic]
							[Field:Dynamic]
								[Local obj(1662):Dynamic]
								[FDynamic:Dynamic] GetType
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(1689):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Cast:System.Reflection.BindingFlags]
																[Binop:System.Reflection.BindingFlags]
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Cast:System.Reflection.BindingFlags]
																				[Cast:cs.Flags<System.Reflection.BindingFlags>]
																					[Cast:System.Reflection.BindingFlags]
																						[Field:System.Reflection.BindingFlags]
																							[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																							[FEnum:System.Reflection.BindingFlags]
																								System.Reflection.BindingFlags
																								Instance
																	|
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Field:System.Reflection.BindingFlags]
																				[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																				[FEnum:System.Reflection.BindingFlags]
																					System.Reflection.BindingFlags
																					Public
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														FlattenHierarchy
				[Else:cs.Flags<System.Reflection.BindingFlags>] [Block:cs.Flags<System.Reflection.BindingFlags>]
					[Binop:Dynamic]
						[Local obj(1662):Dynamic]
						=
						[Const null:Unknown<100>]
					[Binop:cs.Flags<System.Reflection.BindingFlags>]
						[Local bf(1689):cs.Flags<System.Reflection.BindingFlags>]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Field:System.Reflection.BindingFlags]
																[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																[FEnum:System.Reflection.BindingFlags]
																	System.Reflection.BindingFlags
																	Static
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														Public
			[Var f(1690):System.Reflection.FieldInfo]
				[Call:System.Reflection.FieldInfo]
					[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo]
						[Local t(1670):System.Type]
						[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.FieldInfo]
							System.Type
							GetField
					[Local field(1663):String]
					[Local bf(1689):cs.Flags<System.Reflection.BindingFlags>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local f(1690):System.Reflection.FieldInfo]
						!=
						[Const null:System.Reflection.FieldInfo]
				[Then:Dynamic] [Block:Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Call:Bool]
								[Field:value : String -> Bool]
									[Call:String]
										[Field:Void -> String]
											[Call:System.Type]
												[Field:Void -> System.Type]
													[Local f(1690):System.Reflection.FieldInfo]
													[FInstance:Void -> System.Type]
														System.Reflection.FieldInfo
														get_FieldType
											[FInstance:Void -> String]
												System.Type
												ToString
									[FInstance:value : String -> Bool]
										String
										StartsWith
								[Const "haxe.lang.Null":String]
						[Then:Dynamic] [Binop:Dynamic]
							[Local value(1664):Dynamic]
							=
							[Call:Dynamic]
								[Field:obj : Dynamic -> nullableType : System.Type -> Dynamic]
									[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
									[FStatic:obj : Dynamic -> nullableType : System.Type -> Dynamic]
										haxe.lang.Runtime
										mkNullable
								[Local value(1664):Dynamic]
								[Call:System.Type]
									[Field:Void -> System.Type]
										[Local f(1690):System.Reflection.FieldInfo]
										[FInstance:Void -> System.Type]
											System.Reflection.FieldInfo
											get_FieldType
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Bool]
									[Field:objA : Dynamic -> objB : Dynamic -> Bool]
										[TypeExpr System.Object:Class<cs.system.Object>]
										[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
											System.Object
											ReferenceEquals
									[Cast:System.Type] [TypeExpr System.Double:Class<cs.system.Double>]
									[Call:System.Type]
										[Field:obj : Dynamic -> System.Type]
											[TypeExpr cs.Lib:Class<cs.Lib>]
											[FStatic:obj : Dynamic -> System.Type]
												cs.Lib
												getNativeType
										[Local value(1664):Dynamic]
								&&
								[Unop:Bool]
									!
									Prefix
									[Call:Bool]
										[Field:objA : Dynamic -> objB : Dynamic -> Bool]
											[TypeExpr System.Object:Class<cs.system.Object>]
											[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
												System.Object
												ReferenceEquals
										[Local t(1670):System.Type]
										[Call:System.Type]
											[Field:Void -> System.Type]
												[Local f(1690):System.Reflection.FieldInfo]
												[FInstance:Void -> System.Type]
													System.Reflection.FieldInfo
													get_FieldType
						[Then:Dynamic] [Block:Dynamic]
							[Var ic(1699):System.IConvertible]
								[Cast:System.IConvertible]
									[Call:System.IConvertible]
										[Local __as__(1698):Dynamic -> Unknown<5>]
										[Local value(1664):Dynamic]
							[Binop:Dynamic]
								[Local value(1664):Dynamic]
								=
								[Call:Dynamic]
									[Field:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
										[Local ic(1699):System.IConvertible]
										[FInstance:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
											System.IConvertible
											ToType
									[Call:System.Type]
										[Field:Void -> System.Type]
											[Local f(1690):System.Reflection.FieldInfo]
											[FInstance:Void -> System.Type]
												System.Reflection.FieldInfo
												get_FieldType
									[Const null:System.IFormatProvider]
					[Call:Void]
						[Field:obj : Dynamic -> value : Dynamic -> Void]
							[Local f(1690):System.Reflection.FieldInfo]
							[FInstance:obj : Dynamic -> value : Dynamic -> Void]
								System.Reflection.FieldInfo
								SetValue
						[Local obj(1662):Dynamic]
						[Local value(1664):Dynamic]
					[Return:Dynamic] [Local value(1664):Dynamic]
				[Else:Dynamic] [Block:Dynamic]
					[Var prop(1700):System.Reflection.PropertyInfo]
						[Call:System.Reflection.PropertyInfo]
							[Field:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.PropertyInfo]
								[Local t(1670):System.Type]
								[FInstance:name : String -> bindingAttr : System.Reflection.BindingFlags -> System.Reflection.PropertyInfo]
									System.Type
									GetProperty
							[Local field(1663):String]
							[Local bf(1689):cs.Flags<System.Reflection.BindingFlags>]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local prop(1700):System.Reflection.PropertyInfo]
								==
								[Const null:System.Reflection.PropertyInfo]
						[Then:Unknown<102>] [Block:Unknown<102>]
							[If:Void]
								[Parenthesis:Bool]
									[Call:Bool]
										[Field:Void -> Bool]
											[Local t(1670):System.Type]
											[FInstance:Void -> Bool]
												System.Type
												get_IsCOMObject
								[Then:Void] [Try:Void]
									[Block:Dynamic]
										[Return:Dynamic]
											[Call:Dynamic]
												[Field:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
													[Local t(1670):System.Type]
													[FInstance:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
														System.Type
														InvokeMember
												[Local field(1663):String]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														SetProperty
												[Const null:System.Reflection.Binder]
												[Local obj(1662):Dynamic]
												[Call:cs.NativeArray<Unknown<101>>]
													[Field:elements : haxe.extern.Rest<Unknown<101>> -> cs.NativeArray<Unknown<101>>]
														[TypeExpr cs.NativeArray:Class<cs.NativeArray>]
														[FStatic:elements : haxe.extern.Rest<Unknown<101>> -> cs.NativeArray<Unknown<101>>]
															cs.NativeArray
															make
													[Local value(1664):Dynamic]
									Catch [Local e(1701):System.Exception] [Block:Void]
							[Throw:Unknown<102>]
								[Binop:String]
									[Binop:String]
										[Binop:String]
											[Const "Field '":String]
											+
											[Local field(1663):String]
										+
										[Const "' not found for writing from Class ":String]
									+
									[Call:String]
										[Field:s : Dynamic -> String]
											[TypeExpr Std:Class<Std>]
											[FStatic:s : Dynamic -> String]
												Std
												string
										[Local t(1670):System.Type]
					[If:Void]
						[Parenthesis:Bool]
							[Call:Bool]
								[Field:value : String -> Bool]
									[Call:String]
										[Field:Void -> String]
											[Call:System.Type]
												[Field:Void -> System.Type]
													[Local prop(1700):System.Reflection.PropertyInfo]
													[FInstance:Void -> System.Type]
														System.Reflection.PropertyInfo
														get_PropertyType
											[FInstance:Void -> String]
												System.Type
												ToString
									[FInstance:value : String -> Bool]
										String
										StartsWith
								[Const "haxe.lang.Null":String]
						[Then:Dynamic] [Binop:Dynamic]
							[Local value(1664):Dynamic]
							=
							[Call:Dynamic]
								[Field:obj : Dynamic -> nullableType : System.Type -> Dynamic]
									[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
									[FStatic:obj : Dynamic -> nullableType : System.Type -> Dynamic]
										haxe.lang.Runtime
										mkNullable
								[Local value(1664):Dynamic]
								[Call:System.Type]
									[Field:Void -> System.Type]
										[Local prop(1700):System.Reflection.PropertyInfo]
										[FInstance:Void -> System.Type]
											System.Reflection.PropertyInfo
											get_PropertyType
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Call:Bool]
									[Field:objA : Dynamic -> objB : Dynamic -> Bool]
										[TypeExpr System.Object:Class<cs.system.Object>]
										[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
											System.Object
											ReferenceEquals
									[Cast:System.Type] [TypeExpr System.Double:Class<cs.system.Double>]
									[Call:System.Type]
										[Field:obj : Dynamic -> System.Type]
											[TypeExpr cs.Lib:Class<cs.Lib>]
											[FStatic:obj : Dynamic -> System.Type]
												cs.Lib
												getNativeType
										[Local value(1664):Dynamic]
								&&
								[Unop:Bool]
									!
									Prefix
									[Call:Bool]
										[Field:objA : Dynamic -> objB : Dynamic -> Bool]
											[TypeExpr System.Object:Class<cs.system.Object>]
											[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
												System.Object
												ReferenceEquals
										[Local t(1670):System.Type]
										[Call:System.Type]
											[Field:Void -> System.Type]
												[Local f(1690):System.Reflection.FieldInfo]
												[FInstance:Void -> System.Type]
													System.Reflection.FieldInfo
													get_FieldType
						[Then:Dynamic] [Block:Dynamic]
							[Var ic1(1710):System.IConvertible]
								[Cast:System.IConvertible]
									[Call:System.IConvertible]
										[Local __as__(1709):Dynamic -> Unknown<5>]
										[Local value(1664):Dynamic]
							[Binop:Dynamic]
								[Local value(1664):Dynamic]
								=
								[Call:Dynamic]
									[Field:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
										[Local ic1(1710):System.IConvertible]
										[FInstance:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
											System.IConvertible
											ToType
									[Call:System.Type]
										[Field:Void -> System.Type]
											[Local f(1690):System.Reflection.FieldInfo]
											[FInstance:Void -> System.Type]
												System.Reflection.FieldInfo
												get_FieldType
									[Const null:System.IFormatProvider]
					[Call:Void]
						[Field:obj : Dynamic -> value : Dynamic -> index : cs.NativeArray<Dynamic> -> Void]
							[Local prop(1700):System.Reflection.PropertyInfo]
							[FInstance:obj : Dynamic -> value : Dynamic -> index : cs.NativeArray<Dynamic> -> Void]
								System.Reflection.PropertyInfo
								SetValue
						[Local obj(1662):Dynamic]
						[Local value(1664):Dynamic]
						[Const null:cs.NativeArray<Dynamic>]
					[Return:Dynamic] [Local value(1664):Dynamic]

	static public callMethod(method) : obj : Dynamic -> methods : cs.NativeArray<System.Reflection.MethodBase> -> methodLength : Int -> args : Array<Dynamic> -> Dynamic

	 = [Function:obj : Dynamic -> methods : cs.NativeArray<System.Reflection.MethodBase> -> methodLength : Int -> args : Array<Dynamic> -> Dynamic]
		[Arg:Dynamic] [Local obj(852):Dynamic]
		[Arg:cs.NativeArray<System.Reflection.MethodBase>] [Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
		[Arg:Int] [Local methodLength(854):Int]
		[Arg:Array<Dynamic>] [Local args(855):Array<Dynamic>]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local methodLength(854):Int]
						==
						[Const 0:Int]
				[Then:Unknown<103>] [Throw:Unknown<103>] [Const "No available methods":String]
			[Var length(856):Int]
				[Field:Int]
					[Local args(855):Array<Dynamic>]
					[FInstance:Int]
						Array<Dynamic>
						length
			[Var oargs(857):cs.NativeArray<Dynamic>]
				[New:cs.NativeArray<Unknown<104>>]
					cs.NativeArray<Unknown<104>>
					[Local length(856):Int]
			[Var ts(858):cs.NativeArray<System.Type>]
				[New:cs.NativeArray<System.Type>]
					cs.NativeArray<System.Type>
					[Local length(856):Int]
			[Var rates(859):cs.NativeArray<Int>]
				[New:cs.NativeArray<Int>]
					cs.NativeArray<Int>
					[Call:Int]
						[Field:Void -> Int]
							[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
							[FInstance:Void -> Int]
								System.Array
								get_Length
			[Block:Void]
				[Var _g(860):Int] [Const 0:Int]
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g(860):Int]
							<
							[Local length(856):Int]
					[Block:Void]
						[Var i(861):Int]
							[Unop:Int]
								++
								Postfix
								[Local _g(860):Int]
						[Binop:Dynamic]
							[Array:Dynamic]
								[Local oargs(857):cs.NativeArray<Dynamic>]
								[Local i(861):Int]
							=
							[Array:Dynamic]
								[Local args(855):Array<Dynamic>]
								[Local i(861):Int]
						[If:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Array:Dynamic]
										[Local args(855):Array<Dynamic>]
										[Local i(861):Int]
									!=
									[Const null:Unknown<105>]
							[Then:System.Type] [Binop:System.Type]
								[Array:System.Type]
									[Local ts(858):cs.NativeArray<System.Type>]
									[Local i(861):Int]
								=
								[Call:System.Type]
									[Field:obj : Dynamic -> System.Type]
										[TypeExpr cs.Lib:Class<cs.Lib>]
										[FStatic:obj : Dynamic -> System.Type]
											cs.Lib
											getNativeType
									[Array:Dynamic]
										[Local args(855):Array<Dynamic>]
										[Local i(861):Int]
			[Var last(862):Int] [Const 0:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local methodLength(854):Int]
						>
						[Const 1:Int]
				[Then:Int] [Block:Int]
					[Block:Void]
						[Var _g1(863):Int] [Const 0:Int]
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g1(863):Int]
									<
									[Local methodLength(854):Int]
							[Block:Void]
								[Var i1(864):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g1(863):Int]
								[Var params(865):cs.NativeArray<System.Reflection.ParameterInfo>]
									[Call:cs.NativeArray<System.Reflection.ParameterInfo>]
										[Field:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
											[Array:System.Reflection.MethodBase]
												[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
												[Local i1(864):Int]
											[FInstance:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
												System.Reflection.MethodBase
												GetParameters
								[If:Void]
									[Parenthesis:Bool]
										[Binop:Bool]
											[Call:Int]
												[Field:Void -> Int]
													[Local params(865):cs.NativeArray<System.Reflection.ParameterInfo>]
													[FInstance:Void -> Int]
														System.Array
														get_Length
											!=
											[Local length(856):Int]
									[Then:Dynamic] [Continue:Dynamic]
									[Else:Void] [Block:Void]
										[Var fits(866):Bool] [Const true:Bool]
										[Var crate(867):Int] [Const 0:Int]
										[Block:Void]
											[Var _g2(869):Int] [Const 0:Int]
											[Var _g11(868):Int]
												[Call:Int]
													[Field:Void -> Int]
														[Local params(865):cs.NativeArray<System.Reflection.ParameterInfo>]
														[FInstance:Void -> Int]
															System.Array
															get_Length
											[While:Void]
												[Parenthesis:Bool]
													[Binop:Bool]
														[Local _g2(869):Int]
														<
														[Local _g11(868):Int]
												[Block:Void]
													[Var i2(870):Int]
														[Unop:Int]
															++
															Postfix
															[Local _g2(869):Int]
													[Var param(871):System.Type]
														[Call:System.Type]
															[Field:Void -> System.Type]
																[Array:System.Reflection.ParameterInfo]
																	[Local params(865):cs.NativeArray<System.Reflection.ParameterInfo>]
																	[Local i2(870):Int]
																[FInstance:Void -> System.Type]
																	System.Reflection.ParameterInfo
																	get_ParameterType
													[Var strParam(872):String]
														[Binop:String]
															[Call:String]
																[Field:s : Dynamic -> String]
																	[TypeExpr Std:Class<Std>]
																	[FStatic:s : Dynamic -> String]
																		Std
																		string
																[Local param(871):System.Type]
															+
															[Const "":String]
													[If:Void]
														[Parenthesis:Bool]
															[Binop:Bool]
																[Call:Bool]
																	[Field:c : System.Type -> Bool]
																		[Local param(871):System.Type]
																		[FInstance:c : System.Type -> Bool]
																			System.Type
																			IsAssignableFrom
																	[Array:System.Type]
																		[Local ts(858):cs.NativeArray<System.Type>]
																		[Local i2(870):Int]
																||
																[Binop:Bool]
																	[Binop:Bool]
																		[Array:System.Type]
																			[Local ts(858):cs.NativeArray<System.Type>]
																			[Local i2(870):Int]
																		==
																		[Const null:System.Type]
																	&&
																	[Unop:Bool]
																		!
																		Prefix
																		[Call:Bool]
																			[Field:Void -> Bool]
																				[Local param(871):System.Type]
																				[FInstance:Void -> Bool]
																					System.Type
																					get_IsValueType
														[Then:Dynamic] [Continue:Dynamic]
														[Else:Void] [If:Void]
															[Parenthesis:Bool]
																[Binop:Bool]
																	[Call:Bool]
																		[Field:value : String -> Bool]
																			[Local strParam(872):String]
																			[FInstance:value : String -> Bool]
																				String
																				StartsWith
																		[Const "haxe.lang.Null":String]
																	||
																	[Binop:Bool]
																		[Parenthesis:Bool]
																			[Binop:Bool]
																				[Binop:Bool]
																					[Array:Dynamic]
																						[Local oargs(857):cs.NativeArray<Dynamic>]
																						[Local i2(870):Int]
																					==
																					[Const null:Unknown<108>]
																				||
																				[Call:Bool]
																					[Field:v : Dynamic -> t : Dynamic -> Bool]
																						[TypeExpr Std:Class<Std>]
																						[FStatic:v : Dynamic -> t : Dynamic -> Bool]
																							Std
																							is
																					[Array:Dynamic]
																						[Local oargs(857):cs.NativeArray<Dynamic>]
																						[Local i2(870):Int]
																					[TypeExpr System.IConvertible:Class<cs.system.IConvertible>]
																		&&
																		[Call:Bool]
																			[Field:c : System.Type -> Bool]
																				[Parenthesis:System.Type]
																					[Cast:System.Type]
																						[Call:Unknown<107>]
																							[Local __typeof__(873):Class<cs.system.IConvertible> -> Unknown<106>]
																							[TypeExpr System.IConvertible:Class<cs.system.IConvertible>]
																						[TypeExpr System.Type:System.Type]
																				[FInstance:c : System.Type -> Bool]
																					System.Type
																					IsAssignableFrom
																			[Local param(871):System.Type]
															[Then:Dynamic] [Block:Dynamic]
																[Unop:Int]
																	++
																	Postfix
																	[Local crate(867):Int]
																[Continue:Dynamic]
															[Else:Void] [If:Void]
																[Parenthesis:Bool]
																	[Unop:Bool]
																		!
																		Prefix
																		[Call:Bool]
																			[Field:Void -> Bool]
																				[Local param(871):System.Type]
																				[FInstance:Void -> Bool]
																					System.Type
																					get_ContainsGenericParameters
																[Then:Dynamic] [Block:Dynamic]
																	[Binop:Bool]
																		[Local fits(866):Bool]
																		=
																		[Const false:Bool]
																	[Break:Dynamic]
										[If:Void]
											[Parenthesis:Bool] [Local fits(866):Bool]
											[Then:System.Reflection.MethodBase] [Block:System.Reflection.MethodBase]
												[Binop:Int]
													[Array:Int]
														[Local rates(859):cs.NativeArray<Int>]
														[Local last(862):Int]
													=
													[Local crate(867):Int]
												[Binop:System.Reflection.MethodBase]
													[Array:System.Reflection.MethodBase]
														[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
														[Unop:Int]
															++
															Postfix
															[Local last(862):Int]
													=
													[Array:System.Reflection.MethodBase]
														[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
														[Local i1(864):Int]
					[Binop:Int]
						[Local methodLength(854):Int]
						=
						[Local last(862):Int]
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Binop:Bool]
								[Local methodLength(854):Int]
								==
								[Const 1:Int]
							&&
							[Binop:Bool]
								[Call:Int]
									[Field:Void -> Int]
										[Call:cs.NativeArray<System.Reflection.ParameterInfo>]
											[Field:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
												[Array:System.Reflection.MethodBase]
													[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
													[Const 0:Int]
												[FInstance:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
													System.Reflection.MethodBase
													GetParameters
										[FInstance:Void -> Int]
											System.Array
											get_Length
								!=
								[Local length(856):Int]
					[Then:Int] [Binop:Int]
						[Local methodLength(854):Int]
						=
						[Const 0:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local methodLength(854):Int]
						==
						[Const 0:Int]
				[Then:Unknown<109>] [Throw:Unknown<109>]
					[Binop:String]
						[Const "Invalid calling parameters for method ":String]
						+
						[Call:String]
							[Field:Void -> String]
								[Array:System.Reflection.MethodBase]
									[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
									[Const 0:Int]
								[FInstance:Void -> String]
									System.Reflection.MemberInfo
									get_Name
			[Var best(874):Float]
				[Field:Float]
					[TypeExpr Math:Class<Math>]
					[FStatic:Float]
						Math
						POSITIVE_INFINITY
			[Var bestMethod(875):Int] [Const 0:Int]
			[Block:Void]
				[Var _g3(876):Int] [Const 0:Int]
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g3(876):Int]
							<
							[Local methodLength(854):Int]
					[Block:Void]
						[Var i3(877):Int]
							[Unop:Int]
								++
								Postfix
								[Local _g3(876):Int]
						[If:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Array:Int]
										[Local rates(859):cs.NativeArray<Int>]
										[Local i3(877):Int]
									<
									[Local best(874):Float]
							[Then:Float] [Block:Float]
								[Binop:Int]
									[Local bestMethod(875):Int]
									=
									[Local i3(877):Int]
								[Binop:Float]
									[Local best(874):Float]
									=
									[Array:Int]
										[Local rates(859):cs.NativeArray<Int>]
										[Local i3(877):Int]
			[Binop:System.Reflection.MethodBase]
				[Array:System.Reflection.MethodBase]
					[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
					[Const 0:Int]
				=
				[Array:System.Reflection.MethodBase]
					[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
					[Local bestMethod(875):Int]
			[Var params1(878):cs.NativeArray<System.Reflection.ParameterInfo>]
				[Call:cs.NativeArray<System.Reflection.ParameterInfo>]
					[Field:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
						[Array:System.Reflection.MethodBase]
							[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
							[Const 0:Int]
						[FInstance:Void -> cs.NativeArray<System.Reflection.ParameterInfo>]
							System.Reflection.MethodBase
							GetParameters
			[Block:Void]
				[Var _g12(880):Int] [Const 0:Int]
				[Var _g4(879):Int]
					[Call:Int]
						[Field:Void -> Int]
							[Local params1(878):cs.NativeArray<System.Reflection.ParameterInfo>]
							[FInstance:Void -> Int]
								System.Array
								get_Length
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g12(880):Int]
							<
							[Local _g4(879):Int]
					[Block:Void]
						[Var i4(881):Int]
							[Unop:Int]
								++
								Postfix
								[Local _g12(880):Int]
						[Var param1(882):System.Type]
							[Call:System.Type]
								[Field:Void -> System.Type]
									[Array:System.Reflection.ParameterInfo]
										[Local params1(878):cs.NativeArray<System.Reflection.ParameterInfo>]
										[Local i4(881):Int]
									[FInstance:Void -> System.Type]
										System.Reflection.ParameterInfo
										get_ParameterType
						[Var strParam1(883):String]
							[Binop:String]
								[Call:String]
									[Field:s : Dynamic -> String]
										[TypeExpr Std:Class<Std>]
										[FStatic:s : Dynamic -> String]
											Std
											string
									[Local param1(882):System.Type]
								+
								[Const "":String]
						[Var arg(884):Unknown<110>]
							[Array:Dynamic]
								[Local oargs(857):cs.NativeArray<Dynamic>]
								[Local i4(881):Int]
						[If:Void]
							[Parenthesis:Bool]
								[Call:Bool]
									[Field:value : String -> Bool]
										[Local strParam1(883):String]
										[FInstance:value : String -> Bool]
											String
											StartsWith
									[Const "haxe.lang.Null":String]
							[Then:Dynamic] [Binop:Dynamic]
								[Array:Dynamic]
									[Local oargs(857):cs.NativeArray<Dynamic>]
									[Local i4(881):Int]
								=
								[Call:Dynamic]
									[Field:obj : Dynamic -> nullableType : System.Type -> Dynamic]
										[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
										[FStatic:obj : Dynamic -> nullableType : System.Type -> Dynamic]
											haxe.lang.Runtime
											mkNullable
									[Local arg(884):Unknown<110>]
									[Local param1(882):System.Type]
							[Else:Void] [If:Void]
								[Parenthesis:Bool]
									[Call:Bool]
										[Field:c : System.Type -> Bool]
											[Parenthesis:System.Type]
												[Cast:System.Type]
													[Call:Unknown<112>]
														[Local __typeof__(893):Class<cs.system.IConvertible> -> Unknown<111>]
														[TypeExpr System.IConvertible:Class<cs.system.IConvertible>]
													[TypeExpr System.Type:System.Type]
											[FInstance:c : System.Type -> Bool]
												System.Type
												IsAssignableFrom
										[Local param1(882):System.Type]
								[Then:Void] [Block:Void]
									[If:Void]
										[Parenthesis:Bool]
											[Binop:Bool]
												[Local arg(884):Unknown<110>]
												==
												[Const null:Unknown<110>]
										[Then:Void] [Block:Void]
											[If:Void]
												[Parenthesis:Bool]
													[Call:Bool]
														[Field:Void -> Bool]
															[Local param1(882):System.Type]
															[FInstance:Void -> Bool]
																System.Type
																get_IsValueType
												[Then:Dynamic] [Binop:Dynamic]
													[Array:Dynamic]
														[Local oargs(857):cs.NativeArray<Dynamic>]
														[Local i4(881):Int]
													=
													[Call:Dynamic]
														[Field:type : System.Type -> Dynamic]
															[TypeExpr System.Activator:Class<cs.system.Activator>]
															[FStatic:type : System.Type -> Dynamic]
																System.Activator
																CreateInstance
														[Local param1(882):System.Type]
										[Else:Void] [If:Void]
											[Parenthesis:Bool]
												[Unop:Bool]
													!
													Prefix
													[Call:Bool]
														[Field:c : System.Type -> Bool]
															[Call:System.Type]
																[Field:obj : Dynamic -> System.Type]
																	[TypeExpr cs.Lib:Class<cs.Lib>]
																	[FStatic:obj : Dynamic -> System.Type]
																		cs.Lib
																		getNativeType
																[Local arg(884):Unknown<110>]
															[FInstance:c : System.Type -> Bool]
																System.Type
																IsAssignableFrom
														[Local param1(882):System.Type]
											[Then:Dynamic] [Binop:Dynamic]
												[Array:Dynamic]
													[Local oargs(857):cs.NativeArray<Dynamic>]
													[Local i4(881):Int]
												=
												[Call:Dynamic]
													[Field:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
														[Parenthesis:System.IConvertible]
															[Cast:System.IConvertible]
																[Local arg(884):Unknown<110>]
																[TypeExpr System.IConvertible:System.IConvertible]
														[FInstance:conversionType : System.Type -> provider : System.IFormatProvider -> Dynamic]
															System.IConvertible
															ToType
													[Local param1(882):System.Type]
													[Const null:System.IFormatProvider]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Bool]
							[Field:Void -> Bool]
								[Array:System.Reflection.MethodBase]
									[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
									[Const 0:Int]
								[FInstance:Void -> Bool]
									System.Reflection.MethodBase
									get_ContainsGenericParameters
						&&
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Array:System.Reflection.MethodBase]
								[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
								[Const 0:Int]
							[TypeExpr System.Reflection.MethodInfo:Class<cs.system.reflection.MethodInfo>]
				[Then:Dynamic] [Block:Dynamic]
					[Var m(894):System.Reflection.MethodInfo]
						[Cast:System.Reflection.MethodInfo]
							[Array:System.Reflection.MethodBase]
								[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
								[Const 0:Int]
					[Var tgs(895):cs.NativeArray<System.Type>]
						[Call:cs.NativeArray<System.Type>]
							[Field:Void -> cs.NativeArray<System.Type>]
								[Local m(894):System.Reflection.MethodInfo]
								[FInstance:Void -> cs.NativeArray<System.Type>]
									System.Reflection.MethodInfo
									GetGenericArguments
					[Block:Void]
						[Var _g13(897):Int] [Const 0:Int]
						[Var _g5(896):Int]
							[Call:Int]
								[Field:Void -> Int]
									[Local tgs(895):cs.NativeArray<System.Type>]
									[FInstance:Void -> Int]
										System.Array
										get_Length
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g13(897):Int]
									<
									[Local _g5(896):Int]
							[Block:Void]
								[Var i5(898):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g13(897):Int]
								[Binop:System.Type]
									[Array:System.Type]
										[Local tgs(895):cs.NativeArray<System.Type>]
										[Local i5(898):Int]
									=
									[Call:System.Type]
										[Local __typeof__(899):Abstract<Dynamic> -> Unknown<113>]
										[TypeExpr Dynamic:Abstract<Dynamic>]
					[Binop:System.Reflection.MethodInfo]
						[Local m(894):System.Reflection.MethodInfo]
						=
						[Call:System.Reflection.MethodInfo]
							[Field:typeArguments : cs.NativeArray<System.Type> -> System.Reflection.MethodInfo]
								[Local m(894):System.Reflection.MethodInfo]
								[FInstance:typeArguments : cs.NativeArray<System.Type> -> System.Reflection.MethodInfo]
									System.Reflection.MethodInfo
									MakeGenericMethod
							[Local tgs(895):cs.NativeArray<System.Type>]
					[Var retg(900):Unknown<114>]
						[Call:Dynamic]
							[Field:obj : Dynamic -> parameters : cs.NativeArray<Dynamic> -> Dynamic]
								[Local m(894):System.Reflection.MethodInfo]
								[FInstance:obj : Dynamic -> parameters : cs.NativeArray<Dynamic> -> Dynamic]
									System.Reflection.MethodBase
									Invoke
							[Local obj(852):Dynamic]
							[Local oargs(857):cs.NativeArray<Dynamic>]
					[Return:Dynamic]
						[Call:Dynamic]
							[Field:dyn : Dynamic -> Dynamic]
								[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
								[FStatic:dyn : Dynamic -> Dynamic]
									haxe.lang.Runtime
									unbox
							[Local retg(900):Unknown<114>]
			[Var m1(901):System.Reflection.MethodBase]
				[Array:System.Reflection.MethodBase]
					[Local methods(853):cs.NativeArray<System.Reflection.MethodBase>]
					[Const 0:Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local obj(852):Dynamic]
							==
							[Const null:Unknown<116>]
						&&
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local m1(901):System.Reflection.MethodBase]
							[TypeExpr System.Reflection.ConstructorInfo:Class<cs.system.reflection.ConstructorInfo>]
				[Then:Dynamic] [Block:Dynamic]
					[Var ret(902):Unknown<115>]
						[Call:Dynamic]
							[Field:parameters : cs.NativeArray<Dynamic> -> Dynamic]
								[Parenthesis:System.Reflection.ConstructorInfo]
									[Cast:System.Reflection.ConstructorInfo]
										[Local m1(901):System.Reflection.MethodBase]
										[TypeExpr System.Reflection.ConstructorInfo:System.Reflection.ConstructorInfo]
								[FInstance:parameters : cs.NativeArray<Dynamic> -> Dynamic]
									System.Reflection.ConstructorInfo
									Invoke
							[Local oargs(857):cs.NativeArray<Dynamic>]
					[Return:Dynamic]
						[Call:Dynamic]
							[Field:dyn : Dynamic -> Dynamic]
								[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
								[FStatic:dyn : Dynamic -> Dynamic]
									haxe.lang.Runtime
									unbox
							[Local ret(902):Unknown<115>]
			[Var ret1(903):Unknown<117>]
				[Call:Dynamic]
					[Field:obj : Dynamic -> parameters : cs.NativeArray<Dynamic> -> Dynamic]
						[Local m1(901):System.Reflection.MethodBase]
						[FInstance:obj : Dynamic -> parameters : cs.NativeArray<Dynamic> -> Dynamic]
							System.Reflection.MethodBase
							Invoke
					[Local obj(852):Dynamic]
					[Local oargs(857):cs.NativeArray<Dynamic>]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:dyn : Dynamic -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:dyn : Dynamic -> Dynamic]
							haxe.lang.Runtime
							unbox
					[Local ret1(903):Unknown<117>]

	static public unbox(method) : dyn : Dynamic -> Dynamic

	 = [Function:dyn : Dynamic -> Dynamic]
		[Arg:Dynamic] [Local dyn(779):Dynamic]
		[Block:Void]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local dyn(779):Dynamic]
							!=
							[Const null:Unknown<118>]
						&&
						[Call:Bool]
							[Field:value : String -> Bool]
								[Parenthesis:String]
									[Binop:String]
										[Call:String]
											[Field:s : Dynamic -> String]
												[TypeExpr Std:Class<Std>]
												[FStatic:s : Dynamic -> String]
													Std
													string
											[Call:System.Type]
												[Field:obj : Dynamic -> System.Type]
													[TypeExpr cs.Lib:Class<cs.Lib>]
													[FStatic:obj : Dynamic -> System.Type]
														cs.Lib
														getNativeType
												[Local dyn(779):Dynamic]
										+
										[Const "":String]
								[FInstance:value : String -> Bool]
									String
									StartsWith
							[Const "haxe.lang.Null":String]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Dynamic]
						[Field:Dynamic]
							[Local dyn(779):Dynamic]
							[FDynamic:Dynamic] toDynamic
				[Else:Dynamic] [Return:Dynamic] [Local dyn(779):Dynamic]

	static public mkNullable(method) : obj : Dynamic -> nullableType : System.Type -> Dynamic

	 = [Function:obj : Dynamic -> nullableType : System.Type -> Dynamic]
		[Arg:Dynamic] [Local obj(891):Dynamic]
		[Arg:System.Type] [Local nullableType(892):System.Type]
		[Block:Dynamic] [Return:Dynamic] [Const null:Unknown<119>]

	static public slowCallField(method) : obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
		[Arg:Dynamic] [Local obj(790):Dynamic]
		[Arg:String] [Local field(791):String]
		[Arg:Array<Dynamic>] [Local args(792):Array<Dynamic>]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local field(791):String]
							==
							[Const "toString":String]
						&&
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local args(792):Array<Dynamic>]
									==
									[Const null:Array<Dynamic>]
								||
								[Binop:Bool]
									[Field:Int]
										[Local args(792):Array<Dynamic>]
										[FInstance:Int]
											Array<Dynamic>
											length
									==
									[Const 0:Int]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Dynamic]
						[Field:Dynamic]
							[Local obj(790):Dynamic]
							[FDynamic:Dynamic] ToString
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local args(792):Array<Dynamic>]
						==
						[Const null:Array<Dynamic>]
				[Then:Array<Dynamic>] [Binop:Array<Dynamic>]
					[Local args(792):Array<Dynamic>]
					=
					[ArrayDecl:Array<Dynamic>]
			[Var bf(793):System.Reflection.BindingFlags]
			[Var t(799):System.Type]
				[Cast:System.Type]
					[Call:System.Type]
						[Local __as__(798):Dynamic -> Unknown<5>]
						[Local obj(790):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t(799):System.Type]
						==
						[Const null:System.Type]
				[Then:System.Reflection.BindingFlags] [Block:System.Reflection.BindingFlags]
					[Var s(805):String]
						[Cast:String]
							[Call:String]
								[Local __as__(804):Dynamic -> Unknown<5>]
								[Local obj(790):Dynamic]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local s(805):String]
								!=
								[Const null:String]
						[Then:Dynamic] [Return:Dynamic]
							[Call:Dynamic]
								[Field:str : cs.internal._StringExt.NativeString -> f : String -> args : Array<Dynamic> -> Dynamic]
									[TypeExpr haxe.lang.StringRefl:Class<cs.internal.StringRefl>]
									[FStatic:str : cs.internal._StringExt.NativeString -> f : String -> args : Array<Dynamic> -> Dynamic]
										haxe.lang.StringRefl
										handleCallField
								[Local s(805):String]
								[Local field(791):String]
								[Local args(792):Array<Dynamic>]
					[Binop:System.Type]
						[Local t(799):System.Type]
						=
						[Call:System.Type]
							[Field:Dynamic]
								[Local obj(790):Dynamic]
								[FDynamic:Dynamic] GetType
					[Binop:System.Reflection.BindingFlags]
						[Local bf(793):System.Reflection.BindingFlags]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Cast:System.Reflection.BindingFlags]
																[Binop:System.Reflection.BindingFlags]
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Cast:System.Reflection.BindingFlags]
																				[Cast:cs.Flags<System.Reflection.BindingFlags>]
																					[Cast:System.Reflection.BindingFlags]
																						[Field:System.Reflection.BindingFlags]
																							[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																							[FEnum:System.Reflection.BindingFlags]
																								System.Reflection.BindingFlags
																								Instance
																	|
																	[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																		[Cast:System.Reflection.BindingFlags]
																			[Field:System.Reflection.BindingFlags]
																				[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																				[FEnum:System.Reflection.BindingFlags]
																					System.Reflection.BindingFlags
																					Public
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														FlattenHierarchy
				[Else:System.Reflection.BindingFlags] [Block:System.Reflection.BindingFlags]
					[If:Void]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local t(799):System.Type]
									==
									[Cast:System.Type] [TypeExpr String:Class<String>]
								&&
								[Binop:Bool]
									[Local field(791):String]
									==
									[Const "fromCharCode":String]
						[Then:Dynamic] [Return:Dynamic]
							[Call:cs.internal._StringExt.NativeString]
								[Field:code : Int -> cs.internal._StringExt.NativeString]
									[TypeExpr haxe.lang.StringExt:Class<cs.internal.StringExt>]
									[FStatic:code : Int -> cs.internal._StringExt.NativeString]
										haxe.lang.StringExt
										fromCharCode
								[Call:Int]
									[Field:obj : Dynamic -> Int]
										[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
										[FStatic:obj : Dynamic -> Int]
											haxe.lang.Runtime
											toInt
									[Array:Dynamic]
										[Local args(792):Array<Dynamic>]
										[Const 0:Int]
					[Binop:Dynamic]
						[Local obj(790):Dynamic]
						=
						[Const null:Unknown<120>]
					[Binop:System.Reflection.BindingFlags]
						[Local bf(793):System.Reflection.BindingFlags]
						=
						[Cast:cs.Flags<System.Reflection.BindingFlags>]
							[Cast:System.Reflection.BindingFlags]
								[Cast:System.Reflection.BindingFlags]
									[Binop:System.Reflection.BindingFlags]
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Cast:System.Reflection.BindingFlags]
													[Cast:cs.Flags<System.Reflection.BindingFlags>]
														[Cast:System.Reflection.BindingFlags]
															[Field:System.Reflection.BindingFlags]
																[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																[FEnum:System.Reflection.BindingFlags]
																	System.Reflection.BindingFlags
																	Static
										|
										[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
											[Cast:System.Reflection.BindingFlags]
												[Field:System.Reflection.BindingFlags]
													[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
													[FEnum:System.Reflection.BindingFlags]
														System.Reflection.BindingFlags
														Public
			[Var mis(838):cs.NativeArray<System.Reflection.MethodBase>]
				[Call:cs.NativeArray<System.Reflection.MethodBase>]
					[Field:bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MethodInfo>]
						[Local t(799):System.Type]
						[FInstance:bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.MethodInfo>]
							System.Type
							GetMethods
					[Local bf(793):System.Reflection.BindingFlags]
			[Var last(839):Int] [Const 0:Int]
			[Block:Void]
				[Var _g1(841):Int] [Const 0:Int]
				[Var _g(840):Int]
					[Call:Int]
						[Field:Void -> Int]
							[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
							[FInstance:Void -> Int]
								System.Array
								get_Length
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g1(841):Int]
							<
							[Local _g(840):Int]
					[Block:Void]
						[Var i(842):Int]
							[Unop:Int]
								++
								Postfix
								[Local _g1(841):Int]
						[Var name(843):String]
							[Call:String]
								[Field:Void -> String]
									[Array:System.Reflection.MethodBase]
										[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
										[Local i(842):Int]
									[FInstance:Void -> String]
										System.Reflection.MemberInfo
										get_Name
						[If:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local name(843):String]
									==
									[Local field(791):String]
							[Then:System.Reflection.MethodBase] [Binop:System.Reflection.MethodBase]
								[Array:System.Reflection.MethodBase]
									[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
									[Unop:Int]
										++
										Postfix
										[Local last(839):Int]
								=
								[Array:System.Reflection.MethodBase]
									[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
									[Local i(842):Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local last(839):Int]
							==
							[Const 0:Int]
						&&
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Local field(791):String]
									==
									[Const "__get":String]
								||
								[Binop:Bool]
									[Local field(791):String]
									==
									[Const "__set":String]
				[Then:Void] [Block:Void]
					[If:String]
						[Parenthesis:Bool]
							[Binop:Bool]
								[Local field(791):String]
								==
								[Const "__get":String]
						[Then:String] [Binop:String]
							[Local field(791):String]
							=
							[Const "get_Item":String]
						[Else:String] [Binop:String]
							[Local field(791):String]
							=
							[Const "set_Item":String]
					[Block:Void]
						[Var _g11(845):Int] [Const 0:Int]
						[Var _g2(844):Int]
							[Call:Int]
								[Field:Void -> Int]
									[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
									[FInstance:Void -> Int]
										System.Array
										get_Length
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g11(845):Int]
									<
									[Local _g2(844):Int]
							[Block:Void]
								[Var i1(846):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g11(845):Int]
								[Var name1(847):String]
									[Call:String]
										[Field:Void -> String]
											[Array:System.Reflection.MethodBase]
												[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
												[Local i1(846):Int]
											[FInstance:Void -> String]
												System.Reflection.MemberInfo
												get_Name
								[If:Void]
									[Parenthesis:Bool]
										[Binop:Bool]
											[Local name1(847):String]
											==
											[Local field(791):String]
									[Then:System.Reflection.MethodBase] [Binop:System.Reflection.MethodBase]
										[Array:System.Reflection.MethodBase]
											[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
											[Unop:Int]
												++
												Postfix
												[Local last(839):Int]
										=
										[Array:System.Reflection.MethodBase]
											[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
											[Local i1(846):Int]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local last(839):Int]
							==
							[Const 0:Int]
						&&
						[Call:Bool]
							[Field:Void -> Bool]
								[Local t(799):System.Type]
								[FInstance:Void -> Bool]
									System.Type
									get_IsCOMObject
				[Then:Dynamic] [Block:Dynamic]
					[Var oargs(848):cs.NativeArray<Unknown<121>>]
						[New:cs.NativeArray<Unknown<121>>]
							cs.NativeArray<Unknown<121>>
							[Field:Int]
								[Local args(792):Array<Dynamic>]
								[FInstance:Int]
									Array<Dynamic>
									length
					[Block:Void]
						[Var _g12(850):Int] [Const 0:Int]
						[Var _g3(849):Int]
							[Call:Int]
								[Field:Void -> Int]
									[Local oargs(848):cs.NativeArray<Unknown<121>>]
									[FInstance:Void -> Int]
										System.Array
										get_Length
						[While:Void]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local _g12(850):Int]
									<
									[Local _g3(849):Int]
							[Block:Void]
								[Var i2(851):Int]
									[Unop:Int]
										++
										Postfix
										[Local _g12(850):Int]
								[Binop:Unknown<121>]
									[Array:Unknown<121>]
										[Local oargs(848):cs.NativeArray<Unknown<121>>]
										[Local i2(851):Int]
									=
									[Array:Dynamic]
										[Local args(792):Array<Dynamic>]
										[Local i2(851):Int]
					[Return:Dynamic]
						[Call:Dynamic]
							[Field:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
								[Local t(799):System.Type]
								[FInstance:name : String -> invokeAttr : System.Reflection.BindingFlags -> binder : System.Reflection.Binder -> target : Dynamic -> args : cs.NativeArray<Dynamic> -> Dynamic]
									System.Type
									InvokeMember
							[Local field(791):String]
							[Field:System.Reflection.BindingFlags]
								[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
								[FEnum:System.Reflection.BindingFlags]
									System.Reflection.BindingFlags
									InvokeMethod
							[Const null:System.Reflection.Binder]
							[Local obj(790):Dynamic]
							[Local oargs(848):cs.NativeArray<Unknown<121>>]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local last(839):Int]
						==
						[Const 0:Int]
				[Then:Unknown<122>] [Throw:Unknown<122>]
					[Binop:String]
						[Binop:String]
							[Binop:String]
								[Const "Method \"":String]
								+
								[Local field(791):String]
							+
							[Const "\" not found on type ":String]
						+
						[Call:String]
							[Field:s : Dynamic -> String]
								[TypeExpr Std:Class<Std>]
								[FStatic:s : Dynamic -> String]
									Std
									string
							[Local t(799):System.Type]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> methods : cs.NativeArray<System.Reflection.MethodBase> -> methodLength : Int -> args : Array<Dynamic> -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> methods : cs.NativeArray<System.Reflection.MethodBase> -> methodLength : Int -> args : Array<Dynamic> -> Dynamic]
							haxe.lang.Runtime
							callMethod
					[Local obj(790):Dynamic]
					[Local mis(838):cs.NativeArray<System.Reflection.MethodBase>]
					[Local last(839):Int]
					[Local args(792):Array<Dynamic>]

	static public callField(method) : obj : Dynamic -> field : String -> fieldHash : Int -> args : Array<Dynamic> -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> fieldHash : Int -> args : Array<Dynamic> -> Dynamic]
		[Arg:Dynamic] [Local obj(1236):Dynamic]
		[Arg:String] [Local field(1237):String]
		[Arg:Int] [Local fieldHash(1238):Int]
		[Arg:Array<Dynamic>] [Local args(1239):Array<Dynamic>]
		[Block:Dynamic]
			[Var hxObj(1245):haxe.lang.HxObject]
				[Cast:haxe.lang.HxObject]
					[Call:haxe.lang.HxObject]
						[Local __as__(1244):Dynamic -> Unknown<5>]
						[Local obj(1236):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local hxObj(1245):haxe.lang.HxObject]
						!=
						[Const null:haxe.lang.HxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Unknown<124>]
						[Field:String -> Int -> Array<Dynamic> -> Unknown<123>]
							[Local hxObj(1245):haxe.lang.HxObject]
							[FDynamic:String -> Int -> Array<Dynamic> -> Unknown<123>] __hx_invokeField
						[Local field(1237):String]
						[If:Int]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local fieldHash(1238):Int]
									==
									[Const 0:Int]
							[Then:Int] [Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(1237):String]
							[Else:Int] [Local fieldHash(1238):Int]
						[Local args(1239):Array<Dynamic>]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
							haxe.lang.Runtime
							slowCallField
					[Local obj(1236):Dynamic]
					[Local field(1237):String]
					[Local args(1239):Array<Dynamic>]

	static public getField(method) : obj : Dynamic -> field : String -> fieldHash : Int -> throwErrors : Bool -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> fieldHash : Int -> throwErrors : Bool -> Dynamic]
		[Arg:Dynamic] [Local obj(1711):Dynamic]
		[Arg:String] [Local field(1712):String]
		[Arg:Int] [Local fieldHash(1713):Int]
		[Arg:Bool] [Local throwErrors(1714):Bool]
		[Block:Dynamic]
			[Var hxObj(1720):haxe.lang.HxObject]
				[Cast:haxe.lang.HxObject]
					[Call:haxe.lang.HxObject]
						[Local __as__(1719):Dynamic -> Unknown<5>]
						[Local obj(1711):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local hxObj(1720):haxe.lang.HxObject]
						!=
						[Const null:haxe.lang.HxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Unknown<126>]
						[Field:String -> Int -> Bool -> Bool -> Bool -> Unknown<125>]
							[Local hxObj(1720):haxe.lang.HxObject]
							[FDynamic:String -> Int -> Bool -> Bool -> Bool -> Unknown<125>] __hx_getField
						[Local field(1712):String]
						[If:Int]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local fieldHash(1713):Int]
									==
									[Const 0:Int]
							[Then:Int] [Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(1712):String]
							[Else:Int] [Local fieldHash(1713):Int]
						[Local throwErrors(1714):Bool]
						[Const false:Bool]
						[Const false:Bool]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
							haxe.lang.Runtime
							slowGetField
					[Local obj(1711):Dynamic]
					[Local field(1712):String]
					[Local throwErrors(1714):Bool]

	static public getField_f(method) : obj : Dynamic -> field : String -> fieldHash : Int -> throwErrors : Bool -> Float

	 = [Function:obj : Dynamic -> field : String -> fieldHash : Int -> throwErrors : Bool -> Float]
		[Arg:Dynamic] [Local obj(1721):Dynamic]
		[Arg:String] [Local field(1722):String]
		[Arg:Int] [Local fieldHash(1723):Int]
		[Arg:Bool] [Local throwErrors(1724):Bool]
		[Block:Dynamic]
			[Var hxObj(1730):haxe.lang.HxObject]
				[Cast:haxe.lang.HxObject]
					[Call:haxe.lang.HxObject]
						[Local __as__(1729):Dynamic -> Unknown<5>]
						[Local obj(1721):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local hxObj(1730):haxe.lang.HxObject]
						!=
						[Const null:haxe.lang.HxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Float]
						[Field:String -> Int -> Bool -> Bool -> Unknown<127>]
							[Local hxObj(1730):haxe.lang.HxObject]
							[FDynamic:String -> Int -> Bool -> Bool -> Unknown<127>] __hx_getField_f
						[Local field(1722):String]
						[If:Int]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local fieldHash(1723):Int]
									==
									[Const 0:Int]
							[Then:Int] [Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(1722):String]
							[Else:Int] [Local fieldHash(1723):Int]
						[Local throwErrors(1724):Bool]
						[Const false:Bool]
			[Return:Dynamic]
				[Call:Float]
					[Field:obj : Dynamic -> Float]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> Float]
							haxe.lang.Runtime
							toDouble
					[Call:Dynamic]
						[Field:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
								haxe.lang.Runtime
								slowGetField
						[Local obj(1721):Dynamic]
						[Local field(1722):String]
						[Local throwErrors(1724):Bool]

	static public setField(method) : obj : Dynamic -> field : String -> fieldHash : Int -> value : Dynamic -> Dynamic

	 = [Function:obj : Dynamic -> field : String -> fieldHash : Int -> value : Dynamic -> Dynamic]
		[Arg:Dynamic] [Local obj(1731):Dynamic]
		[Arg:String] [Local field(1732):String]
		[Arg:Int] [Local fieldHash(1733):Int]
		[Arg:Dynamic] [Local value(1734):Dynamic]
		[Block:Dynamic]
			[Var hxObj(1740):haxe.lang.HxObject]
				[Cast:haxe.lang.HxObject]
					[Call:haxe.lang.HxObject]
						[Local __as__(1739):Dynamic -> Unknown<5>]
						[Local obj(1731):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local hxObj(1740):haxe.lang.HxObject]
						!=
						[Const null:haxe.lang.HxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Unknown<129>]
						[Field:String -> Int -> Dynamic -> Bool -> Unknown<128>]
							[Local hxObj(1740):haxe.lang.HxObject]
							[FDynamic:String -> Int -> Dynamic -> Bool -> Unknown<128>] __hx_setField
						[Local field(1732):String]
						[If:Int]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local fieldHash(1733):Int]
									==
									[Const 0:Int]
							[Then:Int] [Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(1732):String]
							[Else:Int] [Local fieldHash(1733):Int]
						[Local value(1734):Dynamic]
						[Const false:Bool]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
							haxe.lang.Runtime
							slowSetField
					[Local obj(1731):Dynamic]
					[Local field(1732):String]
					[Local value(1734):Dynamic]

	static public setField_f(method) : obj : Dynamic -> field : String -> fieldHash : Int -> value : Float -> Float

	 = [Function:obj : Dynamic -> field : String -> fieldHash : Int -> value : Float -> Float]
		[Arg:Dynamic] [Local obj(1741):Dynamic]
		[Arg:String] [Local field(1742):String]
		[Arg:Int] [Local fieldHash(1743):Int]
		[Arg:Float] [Local value(1744):Float]
		[Block:Dynamic]
			[Var hxObj(1750):haxe.lang.HxObject]
				[Cast:haxe.lang.HxObject]
					[Call:haxe.lang.HxObject]
						[Local __as__(1749):Dynamic -> Unknown<5>]
						[Local obj(1741):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local hxObj(1750):haxe.lang.HxObject]
						!=
						[Const null:haxe.lang.HxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Float]
						[Field:String -> Int -> Float -> Bool -> Unknown<130>]
							[Local hxObj(1750):haxe.lang.HxObject]
							[FDynamic:String -> Int -> Float -> Bool -> Unknown<130>] __hx_setField_f
						[Local field(1742):String]
						[If:Int]
							[Parenthesis:Bool]
								[Binop:Bool]
									[Local fieldHash(1743):Int]
									==
									[Const 0:Int]
							[Then:Int] [Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(1742):String]
							[Else:Int] [Local fieldHash(1743):Int]
						[Local value(1744):Float]
						[Const false:Bool]
			[Return:Dynamic]
				[Call:Float]
					[Field:obj : Dynamic -> Float]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> Float]
							haxe.lang.Runtime
							toDouble
					[Call:Dynamic]
						[Field:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
								haxe.lang.Runtime
								slowSetField
						[Local obj(1741):Dynamic]
						[Local field(1742):String]
						[Local value(1744):Float]

	static public toString(method) : obj : Dynamic -> String

	 = [Function:obj : Dynamic -> String]
		[Arg:Dynamic] [Local obj(1751):Dynamic]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local obj(1751):Dynamic]
						==
						[Const null:Unknown<131>]
				[Then:Dynamic] [Return:Dynamic] [Const null:String]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:v : Dynamic -> t : Dynamic -> Bool]
							[TypeExpr Std:Class<Std>]
							[FStatic:v : Dynamic -> t : Dynamic -> Bool]
								Std
								is
						[Local obj(1751):Dynamic]
						[TypeExpr Bool:Abstract<Bool>]
				[Then:Void] [Block:Void]
					[If:Void]
						[Parenthesis:Dynamic] [Local obj(1751):Dynamic]
						[Then:Dynamic] [Return:Dynamic] [Const "true":String]
						[Else:Dynamic] [Return:Dynamic] [Const "false":String]
			[Return:Dynamic]
				[Call:String]
					[Field:Dynamic]
						[Local obj(1751):Dynamic]
						[FDynamic:Dynamic] ToString

	static public typeEq(method) : t1 : System.Type -> t2 : System.Type -> Bool

	 = [Function:t1 : System.Type -> t2 : System.Type -> Bool]
		[Arg:System.Type] [Local t1(1544):System.Type]
		[Arg:System.Type] [Local t2(1545):System.Type]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Binop:Bool]
							[Local t1(1544):System.Type]
							==
							[Const null:System.Type]
						||
						[Binop:Bool]
							[Local t2(1545):System.Type]
							==
							[Const null:System.Type]
				[Then:Dynamic] [Return:Dynamic]
					[Binop:Bool]
						[Local t1(1544):System.Type]
						==
						[Local t2(1545):System.Type]
			[Var t1i(1546):Bool]
				[Call:Bool]
					[Field:Void -> Bool]
						[Local t1(1544):System.Type]
						[FInstance:Void -> Bool]
							System.Type
							get_IsInterface
			[Var t2i(1547):Bool]
				[Call:Bool]
					[Field:Void -> Bool]
						[Local t2(1545):System.Type]
						[FInstance:Void -> Bool]
							System.Type
							get_IsInterface
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t1i(1546):Bool]
						!=
						[Local t2i(1547):Bool]
				[Then:Void] [Block:Void]
					[If:Void]
						[Parenthesis:Bool] [Local t1i(1546):Bool]
						[Then:Void] [Block:Void]
							[Var g(1557):haxe.lang.GenericInterface]
								[Call:haxe.lang.GenericInterface]
									[Field:t : System.Type -> haxe.lang.GenericInterface]
										[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
										[FStatic:t : System.Type -> haxe.lang.GenericInterface]
											haxe.lang.Runtime
											getGenericAttr
									[Local t1(1544):System.Type]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Local g(1557):haxe.lang.GenericInterface]
										!=
										[Const null:haxe.lang.GenericInterface]
								[Then:System.Type] [Binop:System.Type]
									[Local t1(1544):System.Type]
									=
									[Field:System.Type]
										[Local g(1557):haxe.lang.GenericInterface]
										[FInstance:System.Type]
											haxe.lang.GenericInterface
											generic
						[Else:Void] [Block:Void]
							[Var g1(1558):haxe.lang.GenericInterface]
								[Call:haxe.lang.GenericInterface]
									[Field:t : System.Type -> haxe.lang.GenericInterface]
										[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
										[FStatic:t : System.Type -> haxe.lang.GenericInterface]
											haxe.lang.Runtime
											getGenericAttr
									[Local t2(1545):System.Type]
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Local g1(1558):haxe.lang.GenericInterface]
										!=
										[Const null:haxe.lang.GenericInterface]
								[Then:System.Type] [Binop:System.Type]
									[Local t2(1545):System.Type]
									=
									[Field:System.Type]
										[Local g1(1558):haxe.lang.GenericInterface]
										[FInstance:System.Type]
											haxe.lang.GenericInterface
											generic
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Int]
							[Field:Void -> Int]
								[Call:cs.NativeArray<System.Type>]
									[Field:Void -> cs.NativeArray<System.Type>]
										[Local t1(1544):System.Type]
										[FInstance:Void -> cs.NativeArray<System.Type>]
											System.Type
											GetGenericArguments
								[FInstance:Void -> Int]
									System.Array
									get_Length
						>
						[Const 0:Int]
				[Then:System.Type] [Binop:System.Type]
					[Local t1(1544):System.Type]
					=
					[Call:System.Type]
						[Field:Void -> System.Type]
							[Local t1(1544):System.Type]
							[FInstance:Void -> System.Type]
								System.Type
								GetGenericTypeDefinition
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Int]
							[Field:Void -> Int]
								[Call:cs.NativeArray<System.Type>]
									[Field:Void -> cs.NativeArray<System.Type>]
										[Local t2(1545):System.Type]
										[FInstance:Void -> cs.NativeArray<System.Type>]
											System.Type
											GetGenericArguments
								[FInstance:Void -> Int]
									System.Array
									get_Length
						>
						[Const 0:Int]
				[Then:System.Type] [Binop:System.Type]
					[Local t2(1545):System.Type]
					=
					[Call:System.Type]
						[Field:Void -> System.Type]
							[Local t2(1545):System.Type]
							[FInstance:Void -> System.Type]
								System.Type
								GetGenericTypeDefinition
			[Return:Dynamic]
				[Call:Bool]
					[Field:objA : Dynamic -> objB : Dynamic -> Bool]
						[TypeExpr System.Object:Class<cs.system.Object>]
						[FStatic:objA : Dynamic -> objB : Dynamic -> Bool]
							System.Object
							ReferenceEquals
					[Local t1(1544):System.Type]
					[Local t2(1545):System.Type]

	static getGenericAttr(method) : t : System.Type -> haxe.lang.GenericInterface

	 = [Function:t : System.Type -> haxe.lang.GenericInterface]
		[Arg:System.Type] [Local t(1548):System.Type]
		[Block:Dynamic]
			[Block:Void]
				[Var _this(1551):cs.NativeArray<Dynamic>]
					[Call:cs.NativeArray<Dynamic>]
						[Field:inherit : Bool -> cs.NativeArray<Dynamic>]
							[Local t(1548):System.Type]
							[FInstance:inherit : Bool -> cs.NativeArray<Dynamic>]
								System.Reflection.MemberInfo
								GetCustomAttributes
						[Const true:Bool]
				[Var _g_arr(9466):cs.NativeArray<Dynamic>] [Local _this(1551):cs.NativeArray<Dynamic>]
				[Var _g_idx(9467):UInt] [Const 0:Int]
				[While:Void]
					[Parenthesis:Bool]
						[Cast:Bool]
							[Binop:Bool]
								[Local _g_idx(9467):UInt]
								<
								[Call:Int]
									[Field:Void -> Int]
										[Local _g_arr(9466):cs.NativeArray<Dynamic>]
										[FInstance:Void -> Int]
											System.Array
											get_Length
					[Block:Void]
						[Var attr(1549):Unknown<132>]
							[Cast:Unknown<132>]
								[Array:Dynamic]
									[Local _g_arr(9466):cs.NativeArray<Dynamic>]
									[Unop:UInt]
										++
										Postfix
										[Local _g_idx(9467):UInt]
						[If:Void]
							[Parenthesis:Bool]
								[Call:Bool]
									[Field:v : Dynamic -> t : Dynamic -> Bool]
										[TypeExpr Std:Class<Std>]
										[FStatic:v : Dynamic -> t : Dynamic -> Bool]
											Std
											is
									[Local attr(1549):Unknown<132>]
									[TypeExpr haxe.lang.GenericInterface:Class<cs.internal.GenericInterface>]
							[Then:Dynamic] [Return:Dynamic] [Cast:haxe.lang.GenericInterface] [Local attr(1549):Unknown<132>]
			[Return:Dynamic] [Const null:haxe.lang.GenericInterface]

	static public genericCast<To : genericCast.To>(method) : obj : Dynamic -> genericCast.To

	 = [Function:obj : Dynamic -> genericCast.To]
		[Arg:Dynamic] [Local obj(1752):Dynamic]
		[Block:Dynamic] [Return:Dynamic] [Const null:genericCast.To]

	static public concat(method) : s1 : String -> s2 : String -> String

	 = [Function:s1 : String -> s2 : String -> String]
		[Arg:String] [Local s1(1753):String]
		[Arg:String] [Local s2(1754):String]
		[Block:Dynamic] [Return:Dynamic] [Const null:String]

	static public toBool(method) : dyn : Dynamic -> Bool

	 = [Function:dyn : Dynamic -> Bool]
		[Arg:Dynamic] [Local dyn(1755):Dynamic]
		[Block:Dynamic]
			[If:Bool]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local dyn(1755):Dynamic]
						==
						[Const null:Unknown<134>]
				[Then:Dynamic] [Return:Dynamic] [Const false:Bool]
				[Else:Dynamic] [Return:Dynamic]
					[Call:Bool]
						[Local __cs__(1756):String -> Dynamic -> Unknown<133>]
						[Const "(bool){0}":String]
						[Local dyn(1755):Dynamic]

}