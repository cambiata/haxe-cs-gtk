class haxe.lang.StringRefl{
	static public fields(var) : Array<String>

	 = [ArrayDecl:Array<String>]
		[Const "length":String]
		[Const "toUpperCase":String]
		[Const "toLowerCase":String]
		[Const "charAt":String]
		[Const "charCodeAt":String]
		[Const "indexOf":String]
		[Const "lastIndexOf":String]
		[Const "split":String]
		[Const "substr":String]
		[Const "substring":String]

	static public handleGetField(method) : str : String -> f : String -> throwErrors : Bool -> Dynamic

	 = [Function:str : String -> f : String -> throwErrors : Bool -> Dynamic]
		[Arg:String] [Local str(735):String]
		[Arg:String] [Local f(736):String]
		[Arg:Bool] [Local throwErrors(737):Bool]
		[Block:Unknown<137>]
			[Switch:Unknown<137>]
				[Parenthesis:String] [Local f(736):String]
				[Case:Dynamic]
					[Const "length":String]
					[Return:Dynamic]
						[Field:Int]
							[Local str(735):String]
							[FInstance:Int]
								String
								length
				[Case:Dynamic]
					[Const "toUpperCase":String]
					[Const "toLowerCase":String]
					[Const "charAt":String]
					[Const "charCodeAt":String]
					[Const "indexOf":String]
					[Const "lastIndexOf":String]
					[Const "split":String]
					[Const "substr":String]
					[Const "substring":String]
					[Return:Dynamic]
						[New:haxe.lang.Closure]
							haxe.lang.Closure
							[Local str(735):String]
							[Local f(736):String]
							[Const 0:Int]
				[Default:Void]
					[If:Void]
						[Parenthesis:Bool] [Local throwErrors(737):Bool]
						[Then:Unknown<136>] [Throw:Unknown<136>]
							[Binop:String]
								[Binop:String]
									[Const "Field not found: '":String]
									+
									[Local f(736):String]
								+
								[Const "' in String":String]
						[Else:Dynamic] [Return:Dynamic] [Const null:Unknown<135>]

	static public handleCallField(method) : str : cs.internal._StringExt.NativeString -> f : String -> args : Array<Dynamic> -> Dynamic

	 = [Function:str : cs.internal._StringExt.NativeString -> f : String -> args : Array<Dynamic> -> Dynamic]
		[Arg:cs.internal._StringExt.NativeString] [Local str(806):cs.internal._StringExt.NativeString]
		[Arg:String] [Local f(807):String]
		[Arg:Array<Dynamic>] [Local args(808):Array<Dynamic>]
		[Block:Dynamic]
			[Var _args(809):Array<Dynamic>] [ArrayDecl:Array<Dynamic>] [Local str(806):cs.internal._StringExt.NativeString]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local args(808):Array<Dynamic>]
						==
						[Const null:Array<Dynamic>]
				[Then:Array<Dynamic>] [Binop:Array<Dynamic>]
					[Local args(808):Array<Dynamic>]
					=
					[Local _args(809):Array<Dynamic>]
				[Else:Array<Dynamic>] [Binop:Array<Dynamic>]
					[Local args(808):Array<Dynamic>]
					=
					[Call:Array<Dynamic>]
						[Field:a : Array<Dynamic> -> Array<Dynamic>]
							[Local _args(809):Array<Dynamic>]
							[FInstance:a : Array<Dynamic> -> Array<Dynamic>]
								Array<Dynamic>
								concat
						[Local args(808):Array<Dynamic>]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
							haxe.lang.Runtime
							slowCallField
					[TypeExpr haxe.lang.StringExt:Class<cs.internal.StringExt>]
					[Local f(807):String]
					[Local args(808):Array<Dynamic>]

}