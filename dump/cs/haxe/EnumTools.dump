extern class haxe.EnumTools{
	static public getName<T : getName.T>(inline method) : e : Enum<getName.T> -> String

	 = [Function:e : Enum<getName.T> -> String]
		[Arg:Enum<getName.T>] [Local e(704):Enum<getName.T>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:String]
					[Field:e : Enum<Dynamic> -> String]
						[TypeExpr Type:Class<Type>]
						[FStatic:e : Enum<Dynamic> -> String]
							Type
							getEnumName
					[Local e(704):Enum<getName.T>]

	static public createByName<T : createByName.T>(inline method) : e : Enum<createByName.T> -> constr : String -> ?params : Null<Array<Dynamic>> -> createByName.T

	 = [Function:e : Enum<createByName.T> -> constr : String -> ?params : Null<Array<Dynamic>> -> createByName.T]
		[Arg:Enum<createByName.T>] [Local e(711):Enum<createByName.T>]
		[Arg:String] [Local constr(712):String]
		[Arg:Null<Array<Dynamic>>]
			[Local params(713):Null<Array<Dynamic>>]
			[Const null:e : Enum<createByName.T> -> constr : String -> ?params : Null<Array<Dynamic>> -> createByName.T]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:createByName.T]
					[Field:e : Enum<createByName.T> -> constr : String -> ?params : Null<Array<Dynamic>> -> createByName.T]
						[TypeExpr Type:Class<Type>]
						[FStatic:e : Enum<createByName.T> -> constr : String -> ?params : Null<Array<Dynamic>> -> createByName.T]
							Type
							createEnum
					[Local e(711):Enum<createByName.T>]
					[Local constr(712):String]
					[Local params(713):Null<Array<Dynamic>>]

	static public createByIndex<T : createByIndex.T>(inline method) : e : Enum<createByIndex.T> -> index : Int -> ?params : Null<Array<Dynamic>> -> createByIndex.T

	 = [Function:e : Enum<createByIndex.T> -> index : Int -> ?params : Null<Array<Dynamic>> -> createByIndex.T]
		[Arg:Enum<createByIndex.T>] [Local e(942):Enum<createByIndex.T>]
		[Arg:Int] [Local index(943):Int]
		[Arg:Null<Array<Dynamic>>]
			[Local params(944):Null<Array<Dynamic>>]
			[Const null:e : Enum<createByIndex.T> -> index : Int -> ?params : Null<Array<Dynamic>> -> createByIndex.T]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:createByIndex.T]
					[Field:e : Enum<createByIndex.T> -> index : Int -> ?params : Null<Array<Dynamic>> -> createByIndex.T]
						[TypeExpr Type:Class<Type>]
						[FStatic:e : Enum<createByIndex.T> -> index : Int -> ?params : Null<Array<Dynamic>> -> createByIndex.T]
							Type
							createEnumIndex
					[Local e(942):Enum<createByIndex.T>]
					[Local index(943):Int]
					[Local params(944):Null<Array<Dynamic>>]

	static public createAll<T : createAll.T>(inline method) : e : Enum<createAll.T> -> Array<createAll.T>

	 = [Function:e : Enum<createAll.T> -> Array<createAll.T>]
		[Arg:Enum<createAll.T>] [Local e(1102):Enum<createAll.T>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Array<createAll.T>]
					[Field:e : Enum<createAll.T> -> Array<createAll.T>]
						[TypeExpr Type:Class<Type>]
						[FStatic:e : Enum<createAll.T> -> Array<createAll.T>]
							Type
							allEnums
					[Local e(1102):Enum<createAll.T>]

	static public getConstructors<T : getConstructors.T>(inline method) : e : Enum<getConstructors.T> -> Array<String>

	 = [Function:e : Enum<getConstructors.T> -> Array<String>]
		[Arg:Enum<getConstructors.T>] [Local e(1117):Enum<getConstructors.T>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Array<String>]
					[Field:e : Enum<Dynamic> -> Array<String>]
						[TypeExpr Type:Class<Type>]
						[FStatic:e : Enum<Dynamic> -> Array<String>]
							Type
							getEnumConstructs
					[Local e(1117):Enum<getConstructors.T>]

}