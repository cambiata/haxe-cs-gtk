class Reflect{
	static public hasField(method) : o : Dynamic -> field : String -> Bool

	 = [Function:o : Dynamic -> field : String -> Bool]
		[Arg:Dynamic] [Local o(949):Dynamic]
		[Arg:String] [Local field(950):String]
		[Block:Dynamic]
			[Var ihx(956):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(955):Dynamic -> Unknown<5>]
						[Local o(949):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(956):haxe.lang.IHxObject]
						!=
						[Const null:haxe.lang.IHxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Binop:Bool]
						[Call:Unknown<6>]
							[Field:String -> Int -> Bool -> Bool -> Bool -> Unknown<6>]
								[Local ihx(956):haxe.lang.IHxObject]
								[FDynamic:String -> Int -> Bool -> Bool -> Bool -> Unknown<6>] __hx_getField
							[Local field(950):String]
							[Call:Int]
								[Field:s : String -> Int]
									[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
									[FStatic:s : String -> Int]
										haxe.lang.FieldLookup
										hash
								[Local field(950):String]
							[Const false:Bool]
							[Const true:Bool]
							[Const false:Bool]
						!=
						[Field:Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:Dynamic]
								haxe.lang.Runtime
								undefined
			[Return:Dynamic]
				[Call:Bool]
					[Field:obj : Dynamic -> field : String -> Bool]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> Bool]
							haxe.lang.Runtime
							slowHasField
					[Local o(949):Dynamic]
					[Local field(950):String]

	static public field(method) : o : Dynamic -> field : String -> Dynamic

	 = [Function:o : Dynamic -> field : String -> Dynamic]
		[Arg:Dynamic] [Local o(1108):Dynamic]
		[Arg:String] [Local field(1109):String]
		[Block:Dynamic]
			[Var ihx(1115):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(1114):Dynamic -> Unknown<5>]
						[Local o(1108):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(1115):haxe.lang.IHxObject]
						!=
						[Const null:haxe.lang.IHxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Unknown<8>]
						[Field:String -> Int -> Bool -> Bool -> Bool -> Unknown<7>]
							[Local ihx(1115):haxe.lang.IHxObject]
							[FDynamic:String -> Int -> Bool -> Bool -> Bool -> Unknown<7>] __hx_getField
						[Local field(1109):String]
						[Call:Int]
							[Field:s : String -> Int]
								[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
								[FStatic:s : String -> Int]
									haxe.lang.FieldLookup
									hash
							[Local field(1109):String]
						[Const false:Bool]
						[Const false:Bool]
						[Const false:Bool]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
							haxe.lang.Runtime
							slowGetField
					[Local o(1108):Dynamic]
					[Local field(1109):String]
					[Const false:Bool]

	static public setField(method) : o : Dynamic -> field : String -> value : Dynamic -> Void

	 = [Function:o : Dynamic -> field : String -> value : Dynamic -> Void]
		[Arg:Dynamic] [Local o(2397):Dynamic]
		[Arg:String] [Local field(2398):String]
		[Arg:Dynamic] [Local value(2399):Dynamic]
		[Block:Void]
			[Var ihx(2405):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(2404):Dynamic -> Unknown<5>]
						[Local o(2397):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(2405):haxe.lang.IHxObject]
						!=
						[Const null:haxe.lang.IHxObject]
				[Then:Unknown<10>] [Call:Unknown<10>]
					[Field:String -> Int -> Dynamic -> Bool -> Unknown<9>]
						[Local ihx(2405):haxe.lang.IHxObject]
						[FDynamic:String -> Int -> Dynamic -> Bool -> Unknown<9>] __hx_setField
					[Local field(2398):String]
					[Call:Int]
						[Field:s : String -> Int]
							[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
							[FStatic:s : String -> Int]
								haxe.lang.FieldLookup
								hash
						[Local field(2398):String]
					[Local value(2399):Dynamic]
					[Const false:Bool]
				[Else:Dynamic] [Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
							haxe.lang.Runtime
							slowSetField
					[Local o(2397):Dynamic]
					[Local field(2398):String]
					[Local value(2399):Dynamic]

	static public getProperty(method) : o : Dynamic -> field : String -> Dynamic

	 = [Function:o : Dynamic -> field : String -> Dynamic]
		[Arg:Dynamic] [Local o(2406):Dynamic]
		[Arg:String] [Local field(2407):String]
		[Block:Dynamic]
			[Var ihx(2413):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(2412):Dynamic -> Unknown<5>]
						[Local o(2406):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(2413):haxe.lang.IHxObject]
						!=
						[Const null:haxe.lang.IHxObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Unknown<12>]
						[Field:String -> Int -> Bool -> Bool -> Bool -> Unknown<11>]
							[Local ihx(2413):haxe.lang.IHxObject]
							[FDynamic:String -> Int -> Bool -> Bool -> Bool -> Unknown<11>] __hx_getField
						[Local field(2407):String]
						[Call:Int]
							[Field:s : String -> Int]
								[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
								[FStatic:s : String -> Int]
									haxe.lang.FieldLookup
									hash
							[Local field(2407):String]
						[Const false:Bool]
						[Const false:Bool]
						[Const true:Bool]
			[If:Void]
				[Parenthesis:Bool]
					[Call:Bool]
						[Field:obj : Dynamic -> field : String -> Bool]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> Bool]
								haxe.lang.Runtime
								slowHasField
						[Local o(2406):Dynamic]
						[Binop:String]
							[Const "get_":String]
							+
							[Local field(2407):String]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Dynamic]
						[Field:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
								haxe.lang.Runtime
								slowCallField
						[Local o(2406):Dynamic]
						[Binop:String]
							[Const "get_":String]
							+
							[Local field(2407):String]
						[Const null:Array<Dynamic>]
			[Return:Dynamic]
				[Call:Dynamic]
					[Field:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:obj : Dynamic -> field : String -> throwErrors : Bool -> Dynamic]
							haxe.lang.Runtime
							slowGetField
					[Local o(2406):Dynamic]
					[Local field(2407):String]
					[Const false:Bool]

	static public setProperty(method) : o : Dynamic -> field : String -> value : Dynamic -> Void

	 = [Function:o : Dynamic -> field : String -> value : Dynamic -> Void]
		[Arg:Dynamic] [Local o(2414):Dynamic]
		[Arg:String] [Local field(2415):String]
		[Arg:Dynamic] [Local value(2416):Dynamic]
		[Block:Void]
			[Var ihx(2422):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(2421):Dynamic -> Unknown<5>]
						[Local o(2414):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(2422):haxe.lang.IHxObject]
						!=
						[Const null:haxe.lang.IHxObject]
				[Then:Unknown<14>] [Call:Unknown<14>]
					[Field:String -> Int -> Dynamic -> Bool -> Unknown<13>]
						[Local ihx(2422):haxe.lang.IHxObject]
						[FDynamic:String -> Int -> Dynamic -> Bool -> Unknown<13>] __hx_setField
					[Local field(2415):String]
					[Call:Int]
						[Field:s : String -> Int]
							[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
							[FStatic:s : String -> Int]
								haxe.lang.FieldLookup
								hash
						[Local field(2415):String]
					[Local value(2416):Dynamic]
					[Const true:Bool]
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Call:Bool]
							[Field:obj : Dynamic -> field : String -> Bool]
								[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
								[FStatic:obj : Dynamic -> field : String -> Bool]
									haxe.lang.Runtime
									slowHasField
							[Local o(2414):Dynamic]
							[Binop:String]
								[Const "set_":String]
								+
								[Local field(2415):String]
					[Then:Dynamic] [Call:Dynamic]
						[Field:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> args : Array<Dynamic> -> Dynamic]
								haxe.lang.Runtime
								slowCallField
						[Local o(2414):Dynamic]
						[Binop:String]
							[Const "set_":String]
							+
							[Local field(2415):String]
						[ArrayDecl:Array<Dynamic>] [Local value(2416):Dynamic]
					[Else:Dynamic] [Call:Dynamic]
						[Field:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
							[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
							[FStatic:obj : Dynamic -> field : String -> value : Dynamic -> Dynamic]
								haxe.lang.Runtime
								slowSetField
						[Local o(2414):Dynamic]
						[Local field(2415):String]
						[Local value(2416):Dynamic]

	static public callMethod(method) : o : Dynamic -> func : haxe.Function -> args : Array<Dynamic> -> Dynamic

	 = [Function:o : Dynamic -> func : haxe.Function -> args : Array<Dynamic> -> Dynamic]
		[Arg:Dynamic] [Local o(2423):Dynamic]
		[Arg:haxe.Function] [Local func(2424):haxe.Function]
		[Arg:Array<Dynamic>] [Local args(2425):Array<Dynamic>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Unknown<16>]
					[Field:Array<Dynamic> -> Unknown<15>]
						[Parenthesis:haxe.lang.Function]
							[Cast:haxe.lang.Function]
								[Local func(2424):haxe.Function]
								[TypeExpr haxe.lang.Function:haxe.lang.Function]
						[FDynamic:Array<Dynamic> -> Unknown<15>] __hx_invokeDynamic
					[Local args(2425):Array<Dynamic>]

	static public fields(method) : o : Dynamic -> Array<String>

	 = [Function:o : Dynamic -> Array<String>]
		[Arg:Dynamic] [Local o(2007):Dynamic]
		[Block:Void]
			[Var ihx(2013):haxe.lang.IHxObject]
				[Cast:haxe.lang.IHxObject]
					[Call:haxe.lang.IHxObject]
						[Local __as__(2012):Dynamic -> Unknown<5>]
						[Local o(2007):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local o(2007):Dynamic]
						!=
						[Const null:Unknown<19>]
				[Then:Dynamic] [Block:Dynamic]
					[Var ret(2014):Array<String>] [ArrayDecl:Array<String>]
					[Call:Unknown<18>]
						[Field:Array<String> -> Unknown<17>]
							[Local ihx(2013):haxe.lang.IHxObject]
							[FDynamic:Array<String> -> Unknown<17>] __hx_getFields
						[Local ret(2014):Array<String>]
					[Return:Dynamic] [Local ret(2014):Array<String>]
				[Else:Void] [If:Void]
					[Parenthesis:Bool]
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local o(2007):Dynamic]
							[TypeExpr System.Type:Class<cs.system.Type>]
					[Then:Dynamic] [Return:Dynamic]
						[Call:Array<String>]
							[Field:c : Class<Dynamic> -> Array<String>]
								[TypeExpr Type:Class<Type>]
								[FStatic:c : Class<Dynamic> -> Array<String>]
									Type
									getClassFields
							[Local o(2007):Dynamic]
					[Else:Dynamic] [Return:Dynamic]
						[Call:Array<String>]
							[Field:c : Class<Dynamic> -> Array<String>]
								[TypeExpr Reflect:Class<Reflect>]
								[FStatic:c : Class<Dynamic> -> Array<String>]
									Reflect
									instanceFields
							[Call:Class<Dynamic>]
								[Field:Dynamic]
									[Local o(2007):Dynamic]
									[FDynamic:Dynamic] GetType

	static instanceFields(method) : c : Class<Dynamic> -> Array<String>

	 = [Function:c : Class<Dynamic> -> Array<String>]
		[Arg:Class<Dynamic>] [Local c(2015):Class<Dynamic>]
		[Block:Dynamic]
			[Var c1(2019):System.Type] [Cast:System.Type] [Local c(2015):Class<Dynamic>]
			[Var ret(2020):Array<String>] [ArrayDecl:Array<String>]
			[Var mis(2032):cs.NativeArray<System.Reflection.FieldInfo>]
				[Call:cs.NativeArray<System.Reflection.FieldInfo>]
					[Field:bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.FieldInfo>]
						[Local c1(2019):System.Type]
						[FInstance:bindingAttr : System.Reflection.BindingFlags -> cs.NativeArray<System.Reflection.FieldInfo>]
							System.Type
							GetFields
					[Cast:cs.Flags<System.Reflection.BindingFlags>]
						[Cast:System.Reflection.BindingFlags]
							[Cast:System.Reflection.BindingFlags]
								[Binop:System.Reflection.BindingFlags]
									[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
										[Cast:System.Reflection.BindingFlags]
											[Cast:System.Reflection.BindingFlags]
												[Cast:cs.Flags<System.Reflection.BindingFlags>]
													[Cast:System.Reflection.BindingFlags]
														[Cast:System.Reflection.BindingFlags]
															[Binop:System.Reflection.BindingFlags]
																[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																	[Cast:System.Reflection.BindingFlags]
																		[Cast:System.Reflection.BindingFlags]
																			[Cast:cs.Flags<System.Reflection.BindingFlags>]
																				[Cast:System.Reflection.BindingFlags]
																					[Field:System.Reflection.BindingFlags]
																						[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																						[FEnum:System.Reflection.BindingFlags]
																							System.Reflection.BindingFlags
																							Public
																|
																[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
																	[Cast:System.Reflection.BindingFlags]
																		[Field:System.Reflection.BindingFlags]
																			[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
																			[FEnum:System.Reflection.BindingFlags]
																				System.Reflection.BindingFlags
																				Instance
									|
									[Cast:cs._Flags.EnumUnderlying<System.Reflection.BindingFlags>]
										[Cast:System.Reflection.BindingFlags]
											[Field:System.Reflection.BindingFlags]
												[TypeExpr System.Reflection.BindingFlags:Enum<cs.system.reflection.BindingFlags>]
												[FEnum:System.Reflection.BindingFlags]
													System.Reflection.BindingFlags
													FlattenHierarchy
			[Block:Void]
				[Var _g1(2034):Int] [Const 0:Int]
				[Var _g(2033):Int]
					[Call:Int]
						[Field:Void -> Int]
							[Local mis(2032):cs.NativeArray<System.Reflection.FieldInfo>]
							[FInstance:Void -> Int]
								System.Array
								get_Length
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g1(2034):Int]
							<
							[Local _g(2033):Int]
					[Block:Void]
						[Var i(2035):Int]
							[Unop:Int]
								++
								Postfix
								[Local _g1(2034):Int]
						[Var i1(2036):System.Reflection.FieldInfo]
							[Array:System.Reflection.FieldInfo]
								[Local mis(2032):cs.NativeArray<System.Reflection.FieldInfo>]
								[Local i(2035):Int]
						[Call:Int]
							[Field:x : String -> Int]
								[Local ret(2020):Array<String>]
								[FInstance:x : String -> Int]
									Array<String>
									push
							[Call:String]
								[Field:Void -> String]
									[Local i1(2036):System.Reflection.FieldInfo]
									[FInstance:Void -> String]
										System.Reflection.MemberInfo
										get_Name
			[Return:Dynamic] [Local ret(2020):Array<String>]

	static public isFunction(inline method) : f : Dynamic -> Bool

	 = [Function:f : Dynamic -> Bool]
		[Arg:Dynamic] [Local f(786):Dynamic]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Bool]
					[Field:v : Dynamic -> t : Dynamic -> Bool]
						[TypeExpr Std:Class<Std>]
						[FStatic:v : Dynamic -> t : Dynamic -> Bool]
							Std
							is
					[Local f(786):Dynamic]
					[TypeExpr haxe.lang.Function:Class<cs.internal.Function>]

	static public compare<T : compare.T>(method) : a : compare.T -> b : compare.T -> Int

	 = [Function:a : compare.T -> b : compare.T -> Int]
		[Arg:compare.T] [Local a(2426):compare.T]
		[Arg:compare.T] [Local b(2427):compare.T]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Int]
					[Field:v1 : Dynamic -> v2 : Dynamic -> Int]
						[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
						[FStatic:v1 : Dynamic -> v2 : Dynamic -> Int]
							haxe.lang.Runtime
							compare
					[Local a(2426):compare.T]
					[Local b(2427):compare.T]

	static public compareMethods(method) : f1 : Dynamic -> f2 : Dynamic -> Bool

	 = [Function:f1 : Dynamic -> f2 : Dynamic -> Bool]
		[Arg:Dynamic] [Local f1(2428):Dynamic]
		[Arg:Dynamic] [Local f2(2429):Dynamic]
		[Block:Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local f1(2428):Dynamic]
						==
						[Local f2(2429):Dynamic]
				[Then:Dynamic] [Return:Dynamic] [Const true:Bool]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local f1(2428):Dynamic]
							[TypeExpr haxe.lang.Closure:Class<cs.internal.Closure>]
						&&
						[Call:Bool]
							[Field:v : Dynamic -> t : Dynamic -> Bool]
								[TypeExpr Std:Class<Std>]
								[FStatic:v : Dynamic -> t : Dynamic -> Bool]
									Std
									is
							[Local f2(2429):Dynamic]
							[TypeExpr haxe.lang.Closure:Class<cs.internal.Closure>]
				[Then:Dynamic] [Block:Dynamic]
					[Var f1c(2430):haxe.lang.Closure] [Cast:haxe.lang.Closure] [Local f1(2428):Dynamic]
					[Var f2c(2431):haxe.lang.Closure] [Cast:haxe.lang.Closure] [Local f2(2429):Dynamic]
					[Return:Dynamic]
						[Binop:Bool]
							[Call:Bool]
								[Field:v1 : { } -> v2 : { } -> Bool]
									[TypeExpr haxe.lang.Runtime:Class<cs.internal.Runtime>]
									[FStatic:v1 : { } -> v2 : { } -> Bool]
										haxe.lang.Runtime
										refEq
								[Field:Dynamic]
									[Local f1c(2430):haxe.lang.Closure]
									[FInstance:Dynamic]
										haxe.lang.Closure
										obj
								[Field:Dynamic]
									[Local f2c(2431):haxe.lang.Closure]
									[FInstance:Dynamic]
										haxe.lang.Closure
										obj
							&&
							[Binop:Bool]
								[Field:String]
									[Local f1c(2430):haxe.lang.Closure]
									[FInstance:String]
										haxe.lang.Closure
										field
								==
								[Field:String]
									[Local f2c(2431):haxe.lang.Closure]
									[FInstance:String]
										haxe.lang.Closure
										field
			[Return:Dynamic] [Const false:Bool]

	static public isObject(method) : v : Dynamic -> Bool

	 = [Function:v : Dynamic -> Bool]
		[Arg:Dynamic] [Local v(2432):Dynamic]
		[Block:Dynamic]
			[Return:Dynamic]
				[Binop:Bool]
					[Binop:Bool]
						[Local v(2432):Dynamic]
						!=
						[Const null:Unknown<20>]
					&&
					[Unop:Bool]
						!
						Prefix
						[Parenthesis:Bool]
							[Binop:Bool]
								[Binop:Bool]
									[Call:Bool]
										[Field:v : Dynamic -> t : Dynamic -> Bool]
											[TypeExpr Std:Class<Std>]
											[FStatic:v : Dynamic -> t : Dynamic -> Bool]
												Std
												is
										[Local v(2432):Dynamic]
										[TypeExpr haxe.lang.Enum:Class<cs.internal.HxEnum>]
									||
									[Call:Bool]
										[Field:v : Dynamic -> t : Dynamic -> Bool]
											[TypeExpr Std:Class<Std>]
											[FStatic:v : Dynamic -> t : Dynamic -> Bool]
												Std
												is
										[Local v(2432):Dynamic]
										[TypeExpr haxe.lang.Function:Class<cs.internal.Function>]
								||
								[Call:Bool]
									[Field:v : Dynamic -> t : Dynamic -> Bool]
										[TypeExpr Std:Class<Std>]
										[FStatic:v : Dynamic -> t : Dynamic -> Bool]
											Std
											is
									[Local v(2432):Dynamic]
									[TypeExpr System.ValueType:Class<cs.system.ValueType>]

	static public isEnumValue(method) : v : Dynamic -> Bool

	 = [Function:v : Dynamic -> Bool]
		[Arg:Dynamic] [Local v(2433):Dynamic]
		[Block:Dynamic]
			[Return:Dynamic]
				[Binop:Bool]
					[Binop:Bool]
						[Local v(2433):Dynamic]
						!=
						[Const null:Unknown<21>]
					&&
					[Parenthesis:Bool]
						[Binop:Bool]
							[Call:Bool]
								[Field:v : Dynamic -> t : Dynamic -> Bool]
									[TypeExpr Std:Class<Std>]
									[FStatic:v : Dynamic -> t : Dynamic -> Bool]
										Std
										is
								[Local v(2433):Dynamic]
								[TypeExpr haxe.lang.Enum:Class<cs.internal.HxEnum>]
							||
							[Call:Bool]
								[Field:v : Dynamic -> t : Dynamic -> Bool]
									[TypeExpr Std:Class<Std>]
									[FStatic:v : Dynamic -> t : Dynamic -> Bool]
										Std
										is
								[Local v(2433):Dynamic]
								[TypeExpr System.Enum:Class<cs.system.Enum>]

	static public deleteField(method) : o : Dynamic -> field : String -> Bool

	 = [Function:o : Dynamic -> field : String -> Bool]
		[Arg:Dynamic] [Local o(2434):Dynamic]
		[Arg:String] [Local field(2435):String]
		[Block:Dynamic]
			[Var ihx(2441):haxe.lang.DynamicObject]
				[Cast:haxe.lang.DynamicObject]
					[Call:haxe.lang.DynamicObject]
						[Local __as__(2440):Dynamic -> Unknown<5>]
						[Local o(2434):Dynamic]
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local ihx(2441):haxe.lang.DynamicObject]
						!=
						[Const null:haxe.lang.DynamicObject]
				[Then:Dynamic] [Return:Dynamic]
					[Call:Bool]
						[Field:Dynamic]
							[Local ihx(2441):haxe.lang.DynamicObject]
							[FDynamic:Dynamic] __hx_deleteField
						[Local field(2435):String]
						[Call:Int]
							[Field:s : String -> Int]
								[TypeExpr haxe.lang.FieldLookup:Class<cs.internal.FieldLookup>]
								[FStatic:s : String -> Int]
									haxe.lang.FieldLookup
									hash
							[Local field(2435):String]
			[Return:Dynamic] [Const false:Bool]

	static public copy<T : copy.T>(method) : o : copy.T -> copy.T

	 = [Function:o : copy.T -> copy.T]
		[Arg:copy.T] [Local o(2442):copy.T]
		[Block:Dynamic]
			[Var o2(2443):Dynamic] [ObjectDecl:{ }]
			[Block:Void]
				[Var _g(2445):Int] [Const 0:Int]
				[Var _g1(2446):Array<String>]
					[Call:Array<String>]
						[Field:o : Dynamic -> Array<String>]
							[TypeExpr Reflect:Class<Reflect>]
							[FStatic:o : Dynamic -> Array<String>]
								Reflect
								fields
						[Local o(2442):copy.T]
				[While:Void]
					[Parenthesis:Bool]
						[Binop:Bool]
							[Local _g(2445):Int]
							<
							[Field:Int]
								[Local _g1(2446):Array<String>]
								[FInstance:Int]
									Array<String>
									length
					[Block:Void]
						[Var f(2444):String]
							[Array:String]
								[Local _g1(2446):Array<String>]
								[Local _g(2445):Int]
						[Unop:Int]
							++
							Prefix
							[Local _g(2445):Int]
						[Call:Void]
							[Field:o : Dynamic -> field : String -> value : Dynamic -> Void]
								[TypeExpr Reflect:Class<Reflect>]
								[FStatic:o : Dynamic -> field : String -> value : Dynamic -> Void]
									Reflect
									setField
							[Local o2(2443):Dynamic]
							[Local f(2444):String]
							[Call:Dynamic]
								[Field:o : Dynamic -> field : String -> Dynamic]
									[TypeExpr Reflect:Class<Reflect>]
									[FStatic:o : Dynamic -> field : String -> Dynamic]
										Reflect
										field
								[Local o(2442):copy.T]
								[Local f(2444):String]
			[Return:Dynamic] [Cast:copy.T] [Local o2(2443):Dynamic]

	static public makeVarArgs(method) : f : (Array<Dynamic> -> Dynamic) -> Dynamic

	 = [Function:f : (Array<Dynamic> -> Dynamic) -> Dynamic]
		[Arg:Array<Dynamic> -> Dynamic] [Local f(2447):Array<Dynamic> -> Dynamic]
		[Block:Dynamic]
			[Return:Dynamic]
				[New:haxe.lang.VarArgsFunction]
					haxe.lang.VarArgsFunction
					[Local f(2447):Array<Dynamic> -> Dynamic]

	static public makeVarArgs(method) : f : (Array<Dynamic> -> Void) -> Dynamic

}